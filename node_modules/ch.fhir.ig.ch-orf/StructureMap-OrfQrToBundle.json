{"resourceType":"StructureMap","id":"OrfQrToBundle","meta":{"versionId":"44","lastUpdated":"2022-01-06T15:55:49.530+01:00"},"text":{"status":"generated","div":"<div xmlns=\"http://www.w3.org/1999/xhtml\">\n         <pre>map &quot;http://fhir.ch/ig/ch-orf/StructureMap/OrfQrToBundle&quot; = &quot;OrfQrToBundle&quot;\n\n\n// ORF QuestionnaireResponse to Bundle\n// 2021-01-11 Oliver Egger, copyright ahdis ag, Apache License\n// QRF Questionnaire: http://build.fhir.org/ig/hl7ch/ch-orf/Questionnaire-order-referral-form.html\n// QRF QuestionnaireResponse: http://build.fhir.org/ig/hl7ch/ch-orf/QuestionnaireResponse-order-referral-form.xml.html\n// Bundle: http://build.fhir.org/ig/hl7ch/ch-orf/StructureDefinition-ch-orf-document.html\n\nuses &quot;http://hl7.org/fhir/StructureDefinition/QuestionnaireResponse&quot; alias QuestionnaireResponse as source\nuses &quot;http://hl7.org/fhir/StructureDefinition/Bundle&quot; alias Bundle as target\nuses &quot;http://hl7.org/fhir/StructureDefinition/Patient&quot; alias Patient as target\nuses &quot;http://hl7.org/fhir/StructureDefinition/RelatedPerson&quot; alias RelatedPerson as target\nuses &quot;http://hl7.org/fhir/StructureDefinition/Organization&quot; alias Organization as target\nuses &quot;http://hl7.org/fhir/StructureDefinition/Practitioner&quot; alias Practitioner as target\nuses &quot;http://hl7.org/fhir/StructureDefinition/PractitionerRole&quot; alias PractitionerRole as target\nuses &quot;http://hl7.org/fhir/StructureDefinition/ServiceRequest&quot; alias ServiceRequest as target\nuses &quot;http://hl7.org/fhir/StructureDefinition/BackboneElement&quot; alias BackboneElement as target\n\ngroup OrfQrToBundle(source qr : QuestionnaireResponse, target bundle : Bundle) {\n  qr -&gt;  bundle.identifier as documentIdentifier,  documentIdentifier.system = 'urn:ietf:rfc:3986',  uuid() as uuidDoc,  documentIdentifier.value = append('urn:uuid:', uuidDoc) &quot;documentIdentifier&quot;;\n  qr as qrcp -&gt;  bundle.entry as e,  e.resource = create('Composition') as composition,  composition.id = uuid() as uuid,  e.fullUrl = append('urn:uuid:', uuid),  bundle.entry as e2,  bundle.timestamp = (now()) as timestamp,  composition.date = timestamp,  e2.resource = create('Patient') as patient,  patient.id = uuid() as uuid2,  e2.fullUrl = append('urn:uuid:', uuid2),  bundle.entry as e4,  e4.resource = qrcp as questionnaireresp,  questionnaireresp.id = uuid() as uuid4,  e4.fullUrl = append('urn:uuid:', uuid4),  bundle.entry as e5,  e5.resource = create('ServiceRequest') as servicerequest,  servicerequest.id = uuid() as uuid5,  e5.fullUrl = append('urn:uuid:', uuid5) then {\n    qr.questionnaire as can -&gt;  bundle.entry as e6,  e6.resource = (can.resolve()) as q,  q.id = uuid() as uuid6,  e6.fullUrl = append('urn:uuid:', uuid6) then QrToBundle(qr, q, patient, questionnaireresp, servicerequest, composition, bundle) &quot;orfbundle&quot;;\n  } &quot;orfbundle&quot;;\n}\n\ngroup QrToGroups(source qr : QuestionnaireResponse, target patient : Patient, target bundle : Bundle, target composition : Composition, target serviceRequest : ServiceRequest) {\n  qr.item as grp where linkId = 'order' then OrderItems(grp, bundle, composition, serviceRequest) &quot;grporder&quot;;\n  qr.item as grp where linkId = 'receiver' then ReceiverInit(grp, bundle, composition, serviceRequest) &quot;receiver&quot;;\n  qr.item as grp where linkId = 'patient' then PatientItems(grp, patient) &quot;grppatient&quot;;\n  qr.item as grp where linkId = 'requestedEncounter' then RequestedEncounterItems(grp, bundle, patient, serviceRequest) &quot;grprequestedencounter&quot;;\n  qr.item as grp where linkId = 'coverage' then Coverage(grp, bundle, patient, serviceRequest) &quot;grprequestedencounter&quot;;\n  qr.item as grp where linkId = 'sender' then SenderAuthorInit(grp, bundle, composition, serviceRequest) &quot;grpsender&quot;;\n  qr.item as grp where linkId = 'receiverCopy' then ReceiverCopy(grp, bundle, patient, composition, serviceRequest) &quot;grpsender&quot;;\n  qr.item as grp where linkId = 'appointment' then Appointment(grp, bundle, composition, serviceRequest) &quot;grpsender&quot;;\n  qr.item as grp where linkId = 'previousResults' then PreviousResults(grp, bundle, serviceRequest) &quot;previousResults&quot;;\n  qr.item as grp where linkId = 'note' then Note(grp, serviceRequest) &quot;note&quot;;\n}\n\ngroup OrderItems(source src : BackboneElement, target bundle : Bundle, target composition, target serviceRequest : ServiceRequest) {\n  src.item as item where ((linkId.value = 'order.precedentDocumentIdentifier') and answer.exists()) -&gt;  composition.extension as ext,  ext.url = 'http://fhir.ch/ig/ch-orf/StructureDefinition/ch-orf-precedentdocument',  ext.value = create('Identifier') as value,  value.system = 'urn:ietf:rfc:3986',  value.value = ('urn:uuid:' + item.answer.valueString) &quot;precedentDocumentIdentifier&quot;;\n  src.item as item where ((linkId.value = 'order.placerOrderIdentifier') and answer.exists()) -&gt;  serviceRequest.identifier as value share placer,  value.type as type,  type.coding as coding,  coding.system = 'http://terminology.hl7.org/CodeSystem/v2-0203',  coding.code = 'PLAC',  value.value = (item.answer.valueString) &quot;placerOrderIdentifier&quot;;\n  src.item as item where ((linkId.value = 'order.placerOrderIdentifierDomain') and answer.exists()) -&gt;  serviceRequest.identifier as value share placer,  value.system = (item.answer.valueString) &quot;placerOrderIdentifierDomain&quot;;\n  src.item as item where ((linkId.value = 'order.fillerOrderIdentifier') and answer.exists()) -&gt;  serviceRequest.identifier as value share filler,  value.type as type,  type.coding as coding,  coding.system = 'http://terminology.hl7.org/CodeSystem/v2-0203',  coding.code = 'FILL',  value.value = (item.answer.valueString) &quot;fillerOrderIdentifier&quot;;\n  src.item as item where ((linkId.value = 'order.fillerOrderIdentifierDomain') and answer.exists()) -&gt;  serviceRequest.identifier as value share filler,  value.system = (item.answer.valueString) &quot;fillerOrderIdentifierDomain&quot;;\n  src.item as item where ((linkId.value = 'order.dateTime') and answer.exists()) -&gt; serviceRequest.authoredOn = (item.answer.value);\n  src.item as item where ((linkId.value = 'order.priority') and answer.exists()) -&gt; serviceRequest.priority = (item.answer.value.code);\n  src.item as item where (linkId.value = 'order.notificationContactDocument') then {\n    item -&gt;  bundle.entry as e4,  e4.resource = create('PractitionerRole') as practitionerRoleDataEnterer,  practitionerRoleDataEnterer.id = uuid() as uuid4,  e4.fullUrl = append('urn:uuid:', uuid4),  composition.extension as extension,  bundle.entry as e5,  e5.resource = create('Practitioner') as practitionerDataEnterer,  practitionerDataEnterer.id = uuid() as uuid5,  e5.fullUrl = append('urn:uuid:', uuid5),  practitionerRoleDataEnterer.practitioner = create('Reference') as reference,  reference.reference = append('urn:uuid:', uuid5) then {\n      item then UrgentNotificationContactForRequestItems(item, practitionerRoleDataEnterer, practitionerDataEnterer) &quot;data&quot;;\n      item then ExtOrfUrgentNotificationContactForRequest(item, practitionerRoleDataEnterer, extension) &quot;extension&quot;;\n    } &quot;items&quot;;\n  } &quot;notificationContactDocument&quot;;\n  src.item as item where (linkId.value = 'order.notificationContactDocumentResponse') then {\n    item -&gt;  bundle.entry as e4,  e4.resource = create('PractitionerRole') as practitionerRoleDataEnterer,  practitionerRoleDataEnterer.id = uuid() as uuid4,  e4.fullUrl = append('urn:uuid:', uuid4),  composition.extension as extension,  bundle.entry as e5,  e5.resource = create('Practitioner') as practitionerDataEnterer,  practitionerDataEnterer.id = uuid() as uuid5,  e5.fullUrl = append('urn:uuid:', uuid5),  practitionerRoleDataEnterer.practitioner = create('Reference') as reference,  reference.reference = append('urn:uuid:', uuid5) then {\n      item then UrgentNotificationContactForResponseItems(item, practitionerRoleDataEnterer, practitionerDataEnterer) &quot;data&quot;;\n      item then ExtOrfUrgentNotificationContactForResponse(item, practitionerRoleDataEnterer, extension) &quot;extension&quot;;\n    } &quot;items&quot;;\n  } &quot;notificationContactDocumentResponse&quot;;\n}\n\ngroup UrgentNotificationContactForRequestPractitionerItems(source src : BackboneElement, target practitioner : Practitioner) {\n  src.item as item where ((linkId.value = 'order.notificationContactDocument.practitioner.familyName') and answer.exists()) -&gt;  practitioner.name as name share practitionerName,  name.family = (item.answer.value);\n  src.item as item where ((linkId.value = 'order.notificationContactDocument.practitioner.givenName') and answer.exists()) -&gt;  practitioner.name as name share practitionerName,  name.given = (item.answer.value);\n  src.item as item where ((linkId.value = 'order.notificationContactDocument.practitioner.title') and answer.exists()) -&gt;  practitioner.name as name share practitionerName,  name.prefix = (item.answer.value) as prefix,  prefix.extension as ext,  ext.url = 'http://hl7.org/fhir/StructureDefinition/iso21090-EN-qualifier',  ext.value = create('code') as value,  value.value = 'AC' &quot;title&quot;;\n  src.item as item where ((linkId.value = 'order.notificationContactDocument.practitioner.phone') and answer.exists()) -&gt;  practitioner.telecom as value,  value.system = 'phone',  value.value = (item.answer.value) &quot;phone&quot;;\n  src.item as item where ((linkId.value = 'order.notificationContactDocument.practitioner.email') and answer.exists()) -&gt;  practitioner.telecom as value,  value.system = 'email',  value.value = (item.answer.value) &quot;email&quot;;\n}\n\ngroup UrgentNotificationContactForRequestItems(source src : BackboneElement, target practitionerRole : practitionerRole, target practitioner : Practitioner) {\n  src.item as item where (linkId.value = 'order.notificationContactDocument.practitioner') then UrgentNotificationContactForRequestPractitionerItems(item, practitioner);\n}\n\ngroup ExtOrfUrgentNotificationContactForRequest(source src : BackboneElement, target practitionerRole : PractitionerRole, target ext : Extension) {\n  src -&gt; ext.url = 'http://fhir.ch/ig/ch-orf/StructureDefinition/ch-orf-urgentnoficationcontactforthisdocument' &quot;url&quot;;\n  src -&gt;  ext.value = create('Reference') as reference,  reference.reference = ('urn:uuid:' + %practitionerRole.id) &quot;practitionerRole&quot;;\n}\n\ngroup UrgentNotificationContactForResponsePractitionerItems(source src : BackboneElement, target practitioner : Practitioner) {\n  src.item as item where ((linkId.value = 'order.notificationContactDocumentResponse.practitioner.familyName') and answer.exists()) -&gt;  practitioner.name as name share practitionerName,  name.family = (item.answer.value);\n  src.item as item where ((linkId.value = 'order.notificationContactDocumentResponse.practitioner.givenName') and answer.exists()) -&gt;  practitioner.name as name share practitionerName,  name.given = (item.answer.value);\n  src.item as item where ((linkId.value = 'order.notificationContactDocumentResponse.practitioner.title') and answer.exists()) -&gt;  practitioner.name as name share practitionerName,  name.prefix = (item.answer.value) as prefix,  prefix.extension as ext,  ext.url = 'http://hl7.org/fhir/StructureDefinition/iso21090-EN-qualifier',  ext.value = create('code') as value,  value.value = 'AC' &quot;title&quot;;\n  src.item as item where ((linkId.value = 'order.notificationContactDocumentResponse.practitioner.phone') and answer.exists()) -&gt;  practitioner.telecom as value,  value.system = 'phone',  value.value = (item.answer.value) &quot;phone&quot;;\n  src.item as item where ((linkId.value = 'order.notificationContactDocumentResponse.practitioner.email') and answer.exists()) -&gt;  practitioner.telecom as value,  value.system = 'email',  value.value = (item.answer.value) &quot;email&quot;;\n}\n\ngroup UrgentNotificationContactForResponseItems(source src : BackboneElement, target practitionerRole : practitionerRole, target practitioner : Practitioner) {\n  src.item as item where (linkId.value = 'order.notificationContactDocumentResponse.practitioner') then UrgentNotificationContactForResponsePractitionerItems(item, practitioner);\n}\n\ngroup ExtOrfUrgentNotificationContactForResponse(source src : BackboneElement, target practitionerRole : PractitionerRole, target ext : Extension) {\n  src -&gt; ext.url = 'http://fhir.ch/ig/ch-orf/StructureDefinition/ch-orf-urgentnoficationcontactfortheresponsetothisdocument' &quot;url&quot;;\n  src -&gt;  ext.value = create('Reference') as reference,  reference.reference = ('urn:uuid:' + %practitionerRole.id) &quot;practitionerRole&quot;;\n}\n\ngroup ReceiverPractitionerItems(source src : BackboneElement, target practitioner : Practitioner) {\n  src.item as item where ((linkId.value = 'receiver.practitioner.familyName') and answer.exists()) -&gt;  practitioner.name as name share practitionerName,  name.family = (item.answer.value);\n  src.item as item where ((linkId.value = 'receiver.practitioner.givenName') and answer.exists()) -&gt;  practitioner.name as name share practitionerName,  name.given = (item.answer.value);\n  src.item as item where ((linkId.value = 'receiver.practitioner.title') and answer.exists()) -&gt;  practitioner.name as name share practitionerName,  name.prefix = (item.answer.value) as prefix,  prefix.extension as ext,  ext.url = 'http://hl7.org/fhir/StructureDefinition/iso21090-EN-qualifier',  ext.value = create('code') as value,  value.value = 'AC' &quot;title&quot;;\n  src.item as item where ((linkId.value = 'receiver.practitioner.gln') and answer.exists()) -&gt;  practitioner.identifier as value,  value.system = 'urn:oid:2.51.1.3',  value.value = (item.answer.value) &quot;gln&quot;;\n  src.item as item where ((linkId.value = 'receiver.practitioner.zsr') and answer.exists()) -&gt;  practitioner.identifier as value,  value.system = 'urn:oid:2.16.756.5.30.1.123.100.2.1.1',  value.value = (item.answer.value) &quot;zsr&quot;;\n  src.item as item where ((linkId.value = 'receiver.practitioner.phone') and answer.exists()) -&gt;  practitioner.telecom as value,  value.system = 'phone',  value.value = (item.answer.value) &quot;phone&quot;;\n  src.item as item where ((linkId.value = 'receiver.practitioner.email') and answer.exists()) -&gt;  practitioner.telecom as value,  value.system = 'email',  value.value = (item.answer.value) &quot;email&quot;;\n}\n\ngroup ReceiverOrganizationItems(source src : BackboneElement, target organization : Organization) {\n  src.item as item where ((linkId.value = 'receiver.organization.name') and answer.exists()) -&gt; organization.name = (item.answer.value);\n  src.item as item where ((linkId.value = 'receiver.organization.gln') and answer.exists()) -&gt;  organization.identifier as value,  value.system = 'urn:oid:2.51.1.3',  value.value = (item.answer.value) &quot;gln&quot;;\n  src.item as item where ((linkId.value = 'receiver.organization.zsr') and answer.exists()) -&gt;  organization.identifier as value,  value.system = 'urn:oid:2.16.756.5.30.1.123.100.2.1.1',  value.value = (item.answer.value) &quot;zsr&quot;;\n  src.item as item where ((linkId.value = 'receiver.organization.streetAddressLine') and answer.exists()) -&gt; organization.address as address share orgAddress then {\n    item.answer as answer -&gt; address.line = (answer.value) &quot;streetAddressLine&quot;;\n  } &quot;answer&quot;;\n  src.item as item where ((linkId.value = 'receiver.organization.postalCode') and answer.exists()) -&gt;  organization.address as address share orgAddress,  address.postalCode = (item.answer.value) &quot;postalCode&quot;;\n  src.item as item where ((linkId.value = 'receiver.organization.city') and answer.exists()) -&gt;  organization.address as address share orgAddress,  address.city = (item.answer.value) &quot;city&quot;;\n  src.item as item where ((linkId.value = 'receiver.organization.country') and answer.exists()) -&gt;  organization.address as address share orgAddress,  address.country = (item.answer.value) &quot;country&quot;;\n}\n\ngroup ReceiverItems(source src : BackboneElement, target bundle : Bundle, target practitionerRole : practitionerRole) {\n  src.item as item where (linkId.value = 'receiver.practitioner') -&gt;  bundle.entry as e2,  e2.resource = create('Practitioner') as practitioner,  practitioner.id = uuid() as uuid2,  practitionerRole.practitioner = create('Reference') as reference,  reference.reference = append('urn:uuid:', uuid2),  e2.fullUrl = append('urn:uuid:', uuid2) then ReceiverPractitionerItems(item, practitioner);\n  src.item as item where (linkId.value = 'receiver.organization') -&gt;  bundle.entry as e3,  e3.resource = create('Organization') as organization,  organization.id = uuid() as uuid3,  practitionerRole.organization = create('Reference') as reference,  reference.reference = append('urn:uuid:', uuid3),  e3.fullUrl = append('urn:uuid:', uuid3) then ReceiverOrganizationItems(item, organization);\n}\n\ngroup ReceiverInit(source src : BackboneElement, target bundle : Bundle, target composition : Composition, target serviceRequest : ServiceRequest) {\n  src -&gt;  bundle.entry as e,  e.resource = create('PractitionerRole') as practitionerRole,  practitionerRole.id = uuid() as uuid,  e.fullUrl = append('urn:uuid:', uuid),  composition.extension as ext,  ext.url = 'http://fhir.ch/ig/ch-orf/StructureDefinition/ch-orf-receiver',  ext.value = create('Reference') as reference,  reference.reference = append('urn:uuid:', uuid) then ReceiverItems(src, bundle, practitionerRole) &quot;receiver&quot;;\n}\n\ngroup PatientItems(source src : BackboneElement, target tgt : Patient) {\n  src.item as item then PatientItems(item, tgt);\n  src.item as item where ((linkId.value = 'patient.familyName') and answer.exists()) -&gt;  tgt.name as name share patientName,  name.family = (item.answer.value);\n  src.item as item where ((linkId.value = 'patient.maidenName') and answer.exists()) -&gt;  tgt.name as name,  name.use = 'maiden',  name.family = (item.answer.value);\n  src.item as item where ((linkId.value = 'patient.givenName') and answer.exists()) -&gt;  tgt.name as name share patientName,  name.given = (item.answer.value);\n  src.item as item where ((linkId.value = 'patient.localPid') and answer.exists()) -&gt;  tgt.identifier as value share localpid,  value.type as type,  type.coding as coding,  coding.system = 'http://terminology.hl7.org/CodeSystem/v2-0203',  coding.code = 'MR',  value.value = (item.answer.valueString) &quot;localPid&quot;;\n  src.item as item where ((linkId.value = 'patient.localPidDomain') and answer.exists()) -&gt;  tgt.identifier as value share localpid,  value.system = (item.answer.valueString) &quot;localPidDomain&quot;;\n  src.item as item where ((linkId.value = 'patient.birthDate') and answer.exists()) -&gt; tgt.birthDate = (item.answer.value);\n  src.item as item where ((linkId.value = 'patient.gender') and answer.exists()) -&gt; tgt.gender = (item.answer.value.code);\n  src.item as item where ((linkId.value = 'patient.maritalStatus') and answer.exists()) then {\n    item.answer as answer then {\n      answer.value : Coding as coding -&gt;  tgt.maritalStatus as maritalStatus,  maritalStatus.coding = coding &quot;maritalStatus&quot;;\n    };\n  } &quot;maritalStatus&quot;;\n  src.item as item where ((linkId.value = 'patient.phone') and answer.exists()) then {\n    item.answer as answer -&gt;  tgt.telecom as value,  value.system = 'phone',  value.value = (answer.value) &quot;phone&quot;;\n  } &quot;phone&quot;;\n  src.item as item where ((linkId.value = 'patient.email') and answer.exists()) -&gt;  tgt.telecom as value,  value.system = 'email',  value.value = (item.answer.value) &quot;email&quot;;\n  src.item as item where ((linkId.value = 'patient.streetAddressLine') and answer.exists()) -&gt; tgt.address as address share orgAddress then {\n    item.answer as answer -&gt; address.line = (answer.value) &quot;streetAddressLine&quot;;\n  } &quot;answer&quot;;\n  src.item as item where ((linkId.value = 'patient.postalCode') and answer.exists()) -&gt;  tgt.address as address share orgAddress,  address.postalCode = (item.answer.value) &quot;postalCode&quot;;\n  src.item as item where ((linkId.value = 'patient.city') and answer.exists()) -&gt;  tgt.address as address share orgAddress,  address.city = (item.answer.value) &quot;city&quot;;\n  src.item as item where ((linkId.value = 'patient.country') and answer.exists()) -&gt;  tgt.address as address share orgAddress,  address.country = (item.answer.value) &quot;country&quot;;\n  src.item as item where ((linkId.value = 'patient.languageOfCorrespondance') and answer.exists()) then {\n    item.answer as answer then {\n      answer.value : Coding as coding -&gt;  tgt.communication as communication,  communication.preferred = true,  communication.language as language,  language.coding = coding &quot;languageOfCorrespondance&quot;;\n    };\n  } &quot;languageOfCorrespondance&quot;;\n  src.item as item where (linkId.value = 'patient.contactperson') -&gt; tgt.contact as contact then {\n    item.item as item where ((linkId.value = 'patient.contactperson.familyName') and answer.exists()) -&gt;  contact.name as name share contactName,  name.family = (item.answer.value);\n    item.item as item where ((linkId.value = 'patient.contactperson.givenName') and answer.exists()) -&gt;  contact.name as name share contactName,  name.given = (item.answer.value);\n    src.item as item where ((linkId.value = 'patient.contactperson.phone') and answer.exists()) then {\n      item.answer as answer -&gt;  tgt.telecom as value,  value.system = 'phone',  value.value = (answer.value) &quot;phone&quot;;\n    } &quot;phone&quot;;\n    item.item as item where ((linkId.value = 'patient.contactperson.email') and answer.exists()) -&gt;  contact.telecom as value,  value.system = 'email',  value.value = (item.answer.value) &quot;email&quot;;\n    item.item as item where ((linkId.value = 'patient.contactperson.relationship') and answer.exists()) -&gt;  contact.relationship as relationship,  relationship.text = (item.answer.value) &quot;relationship&quot;;\n  } &quot;contact&quot;;\n}\n\ngroup RequestedEncounterItems(source src : BackboneElement, target bundle : Bundle, target patient : Patient, target serviceRequest : ServiceRequest) {\n  src -&gt;  bundle.entry as e4,  e4.resource = create('Encounter') as encounter,  encounter.id = uuid() as uuid4,  e4.fullUrl = ('urn:uuid:' + %uuid4),  encounter.status = 'planned',  serviceRequest.extension as extension,  encounter.subject = create('Reference') as subject,  subject.reference = ('urn:uuid:' + %patient.id),  extension.url = 'http://fhir.ch/ig/ch-orf/StructureDefinition/ch-orf-requestedencounterdetails',  extension.value = create('Reference') as reference,  reference.reference = ('urn:uuid:' + %uuid4) then {\n    src.item as item where ((linkId.value = 'requestedEncounter.class') and answer.exists()) -&gt; encounter.class = (item.answer.value) &quot;class&quot;;\n    src.item as item where ((linkId.value = 'requestedEncounter.desiredAccommodation') and answer.exists()) -&gt;  encounter.extension as extension,  extension.url = 'http://fhir.ch/ig/ch-orf/StructureDefinition/ch-orf-desiredaccommodation',  extension.value = (item.answer.value) &quot;desiredAccommodation&quot;;\n  } &quot;RequestedEncounterItems&quot;;\n}\n\ngroup Coverage(source src : BackboneElement, target bundle : Bundle, target patient : Patient, target serviceRequest : ServiceRequest) {\n  // coverage.beneficiary\n  src.item as item where where(linkId.value = 'coverage.beneficiary') then {\n    item.item as item where ((linkId.value = 'coverage.beneficiary.ahvn13') and answer.exists()) -&gt;  patient.identifier as identifier,  identifier.system = 'urn:oid:2.16.756.5.32',  identifier.value = (item.answer.value) &quot;ahvn13&quot;;\n  } &quot;beneficiary&quot;;\n  // coverage.kvg\n  src.item as item where where(linkId.value = 'coverage.kvg') -&gt;  bundle.entry as e4,  e4.resource = create('Coverage') as coverage,  coverage.id = uuid() as uuid4,  e4.fullUrl = ('urn:uuid:' + %uuid4),  serviceRequest.insurance as insurance,  insurance.reference = ('urn:uuid:' + %uuid4),  coverage.status = 'active',  coverage.beneficiary = create('Reference') as subject,  subject.reference = ('urn:uuid:' + %patient.id),  coverage.type as type,  type.coding as coding,  coding.system = 'http://fhir.ch/ig/ch-orf/CodeSystem/ch-orf-cs-coveragetype',  coding.code = 'KVG' then {\n    item.item as item where ((linkId.value = 'coverage.kvg.name') and answer.exists()) -&gt;  coverage.payor as payor,  payor.reference as refcontained,  refcontained.value = '#org',  coverage.contained = create('Organization') as organization,  organization.id = 'org',  organization.name = (item.answer.value) &quot;name&quot;;\n    item.item as item where ((linkId.value = 'coverage.kvg.insuranceCardNumber') and answer.exists()) -&gt;  coverage.identifier as identifier,  identifier.type as typeid,  typeid.coding as coding,  coding.system = 'http://fhir.ch/ig/ch-orf/CodeSystem/ch-orf-cs-coverageidentifiertype',  coding.code = 'VeKa',  identifier.value = (item.answer.value) &quot;insuranceCardNumber&quot;;\n  } &quot;coveragekvg&quot;;\n  // coverage.uvg\tUnfallversicherung (nach UVG)\t0..1\tgroup\t\tDefinition: Coverage.type\n  src.item as item where where(linkId.value = 'coverage.uvg') -&gt;  bundle.entry as e4,  e4.resource = create('Coverage') as coverage,  coverage.id = uuid() as uuid4,  e4.fullUrl = ('urn:uuid:' + %uuid4),  serviceRequest.insurance as insurance,  insurance.reference = ('urn:uuid:' + %uuid4),  coverage.status = 'active',  coverage.beneficiary = create('Reference') as subject,  subject.reference = ('urn:uuid:' + %patient.id),  coverage.type as type,  type.coding as coding,  coding.system = 'http://fhir.ch/ig/ch-orf/CodeSystem/ch-orf-cs-coveragetype',  coding.code = 'UVG' then {\n    item.item as item where ((linkId.value = 'coverage.uvg.name') and answer.exists()) -&gt;  coverage.payor as payor,  payor.reference as refcontained,  refcontained.value = '#org',  coverage.contained = create('Organization') as organization,  organization.id = 'org',  organization.name = (item.answer.value) &quot;name&quot;;\n    item.item as item where ((linkId.value = 'coverage.uvg.claimNumber') and answer.exists()) -&gt;  coverage.identifier as identifier,  identifier.type as typeid,  typeid.coding as coding,  coding.system = 'http://fhir.ch/ig/ch-orf/CodeSystem/ch-orf-cs-coverageidentifiertype',  coding.code = 'Claim',  identifier.value = (item.answer.value) &quot;claimNumber&quot;;\n  } &quot;coverageuvg&quot;;\n  // coverage.vvg\tZusatzversicherung (nach VVG)\t0..1\tgroup\t\tDefinition: Coverage.type\n  src.item as item where where(linkId.value = 'coverage.vvg') -&gt;  bundle.entry as e4,  e4.resource = create('Coverage') as coverage,  coverage.id = uuid() as uuid4,  e4.fullUrl = ('urn:uuid:' + %uuid4),  serviceRequest.insurance as insurance,  insurance.reference = ('urn:uuid:' + %uuid4),  coverage.status = 'active',  coverage.beneficiary = create('Reference') as subject,  subject.reference = ('urn:uuid:' + %patient.id),  coverage.type as type,  type.coding as coding,  coding.system = 'http://fhir.ch/ig/ch-orf/CodeSystem/ch-orf-cs-coveragetype',  coding.code = 'VVG' then {\n    item.item as item where ((linkId.value = 'coverage.vvg.name') and answer.exists()) -&gt;  coverage.payor as payor,  payor.reference as refcontained,  refcontained.value = '#org',  coverage.contained = create('Organization') as organization,  organization.id = 'org',  organization.name = (item.answer.value) &quot;name&quot;;\n    item.item as item where ((linkId.value = 'coverage.vvg.insuranceCardNumber') and answer.exists()) -&gt;  coverage.identifier as identifier,  identifier.type as typeid,  typeid.coding as coding,  coding.system = 'http://fhir.ch/ig/ch-orf/CodeSystem/ch-orf-cs-coverageidentifiertype',  coding.code = 'VeKa',  identifier.value = (item.answer.value) &quot;insuranceCardNumber&quot;;\n  } &quot;coveragevvg&quot;;\n  // coverage.iv\tInvalidenversicherung (IV)\t0..1\tgroup\t\tDefinition: Coverage.type\n  src.item as item where where(linkId.value = 'coverage.iv') -&gt;  bundle.entry as e4,  e4.resource = create('Coverage') as coverage,  coverage.id = uuid() as uuid4,  e4.fullUrl = ('urn:uuid:' + %uuid4),  serviceRequest.insurance as insurance,  insurance.reference = ('urn:uuid:' + %uuid4),  coverage.status = 'active',  coverage.beneficiary = create('Reference') as subject,  subject.reference = ('urn:uuid:' + %patient.id),  coverage.type as type,  type.coding as coding,  coding.system = 'http://fhir.ch/ig/ch-orf/CodeSystem/ch-orf-cs-coveragetype',  coding.code = 'IVG' then {\n    item.item as item where ((linkId.value = 'coverage.iv.verfuegungsnummer') and answer.exists()) -&gt;  coverage.identifier as identifier,  identifier.type as typeid,  typeid.coding as coding,  coding.system = 'http://fhir.ch/ig/ch-orf/CodeSystem/ch-orf-cs-coverageidentifiertype',  coding.code = 'IV',  identifier.value = (item.answer.value),  coverage.payor as payor,  payor.reference as refcontained,  refcontained.value = '#org',  coverage.contained = create('Organization') as organization,  organization.id = 'org',  organization.name = 'IV' &quot;verfuegungsnummer&quot;;\n  } &quot;coverageiv&quot;;\n  // coverage.mv\tMilitärversicherung (MV)\t0..1\tgroup\t\tDefinition: Coverage.type\n  src.item as item where where(linkId.value = 'coverage.mv') -&gt;  bundle.entry as e4,  e4.resource = create('Coverage') as coverage,  coverage.id = uuid() as uuid4,  e4.fullUrl = ('urn:uuid:' + %uuid4),  serviceRequest.insurance as insurance,  insurance.reference = ('urn:uuid:' + %uuid4),  coverage.status = 'active',  coverage.beneficiary = create('Reference') as subject,  subject.reference = ('urn:uuid:' + %patient.id),  coverage.type as type,  type.coding as coding,  coding.system = 'http://fhir.ch/ig/ch-orf/CodeSystem/ch-orf-cs-coveragetype',  coding.code = 'MVG' then {\n    item.item as item where ((linkId.value = 'coverage.mv.versichertennummer') and answer.exists()) -&gt;  coverage.identifier as identifier,  identifier.type as typeid,  typeid.coding as coding,  coding.system = 'http://fhir.ch/ig/ch-orf/CodeSystem/ch-orf-cs-coverageidentifiertype',  coding.code = 'MV',  identifier.value = (item.answer.value),  coverage.payor as payor,  payor.reference as refcontained,  refcontained.value = '#org',  coverage.contained = create('Organization') as organization,  organization.id = 'org',  organization.name = 'MV' &quot;versichertennummer&quot;;\n  } &quot;coveragemv&quot;;\n  // coverage.self\tSelbstzahler\t0..1\tgroup\t\tDefinition: Coverage.type\n  src.item as item where where(linkId.value = 'coverage.self') then {\n    item.item as item where ((linkId.value = 'coverage.self.patient') and answer.exists() and answer.value) -&gt;  bundle.entry as e4,  e4.resource = create('Coverage') as coverage,  coverage.id = uuid() as uuid4,  e4.fullUrl = ('urn:uuid:' + %uuid4),  serviceRequest.insurance as insurance,  insurance.reference = ('urn:uuid:' + %uuid4),  coverage.status = 'active',  coverage.beneficiary = create('Reference') as subject,  subject.reference = ('urn:uuid:' + %patient.id),  coverage.type as type,  type.coding as coding,  coding.system = 'http://fhir.ch/ig/ch-orf/CodeSystem/ch-orf-cs-coveragetype',  coding.code = 'Self',  coverage.payor as subject,  subject.reference = ('urn:uuid:' + %patient.id) &quot;payor&quot;;\n    item.item as item2 where ((linkId.value = 'coverage.self.patientRelatedPerson') and answer.exists() and answer.value) then {\n      item.item as item where (linkId.value = 'coverage.self.relatedPerson') -&gt;  bundle.entry as e5,  e5.resource = create('Coverage') as coverage,  coverage.id = uuid() as uuid4,  e5.fullUrl = ('urn:uuid:' + %uuid4),  serviceRequest.insurance as insurance,  insurance.reference = ('urn:uuid:' + %uuid4),  coverage.status = 'active',  coverage.beneficiary = create('Reference') as subject,  subject.reference = ('urn:uuid:' + %patient.id),  coverage.type as type,  type.coding as coding,  coding.system = 'http://fhir.ch/ig/ch-orf/CodeSystem/ch-orf-cs-coveragetype',  coding.code = 'Self',  bundle.entry as e6,  e6.resource = create('RelatedPerson') as relatedPerson,  relatedPerson.id = uuid() as uuid6,  e6.fullUrl = append('urn:uuid:', uuid6),  coverage.payor as subject,  subject.reference = ('urn:uuid:' + %relatedPerson.id),  relatedPerson.patient as reference,  reference.reference = ('urn:uuid:' + %patient.id) then CoverageRelatedPersonItems(item, relatedPerson) &quot;relatedPerson&quot;;\n    } &quot;&quot;;\n  } &quot;self&quot;;\n  // coverage.other\tAnderer Kostenträger\t0..1\tgroup\t\tDefinition: Coverage.type\n  src.item as item where where(linkId.value = 'coverage.other') -&gt;  bundle.entry as e4,  e4.resource = create('Coverage') as coverage,  coverage.id = uuid() as uuid4,  e4.fullUrl = ('urn:uuid:' + %uuid4),  serviceRequest.insurance as insurance,  insurance.reference = ('urn:uuid:' + %uuid4),  coverage.status = 'active',  coverage.beneficiary = create('Reference') as subject,  subject.reference = ('urn:uuid:' + %patient.id),  coverage.type as type,  type.coding as coding,  coding.system = 'http://fhir.ch/ig/ch-orf/CodeSystem/ch-orf-cs-coveragetype',  coding.code = 'Other' then {\n    item.item as item where ((linkId.value = 'coverage.other.name') and answer.exists()) -&gt;  coverage.payor as payor,  payor.reference as refcontained,  refcontained.value = '#org',  coverage.contained = create('Organization') as organization,  organization.id = 'org',  organization.name = (item.answer.value) &quot;name&quot;;\n    item.item as item where ((linkId.value = 'coverage.other.id') and answer.exists()) -&gt;  coverage.identifier as identifier,  identifier.value = (item.answer.value) &quot;id&quot;;\n  } &quot;coveragevvg&quot;;\n}\n\ngroup CoverageRelatedPersonItems(source src : BackboneElement, target relatedPerson : RelatedPerson) {\n  src.item as item where ((linkId.value = 'coverage.self.relatedPerson.familyName') and answer.exists()) -&gt;  relatedPerson.name as name share name,  name.family = (item.answer.value);\n  src.item as item where ((linkId.value = 'coverage.self.relatedPerson.givenName') and answer.exists()) -&gt;  relatedPerson.name as name share name,  name.given = (item.answer.value);\n  src.item as item where ((linkId.value = 'coverage.self.relatedPerson.phone') and answer.exists()) then {\n    item.answer as answer -&gt;  relatedPerson.telecom as value,  value.system = 'phone',  value.value = (answer.value) &quot;phone&quot;;\n  } &quot;phone&quot;;\n  src.item as item where ((linkId.value = 'coverage.self.relatedPerson.email') and answer.exists()) -&gt;  relatedPerson.telecom as value,  value.system = 'email',  value.value = (item.answer.value) &quot;email&quot;;\n  src.item as item where ((linkId.value = 'coverage.self.relatedPerson.streetAddressLine') and answer.exists()) -&gt; relatedPerson.address as address share orgAddress then {\n    item.answer as answer -&gt; address.line = (answer.value) &quot;streetAddressLine&quot;;\n  } &quot;answer&quot;;\n  src.item as item where ((linkId.value = 'coverage.self.relatedPerson.postalCode') and answer.exists()) -&gt;  relatedPerson.address as address share orgAddress,  address.postalCode = (item.answer.value) &quot;postalCode&quot;;\n  src.item as item where ((linkId.value = 'coverage.self.relatedPerson.city') and answer.exists()) -&gt;  relatedPerson.address as address share orgAddress,  address.city = (item.answer.value) &quot;city&quot;;\n  src.item as item where ((linkId.value = 'coverage.self.relatedPerson.country') and answer.exists()) -&gt;  relatedPerson.address as address share orgAddress,  address.country = (item.answer.value) &quot;country&quot;;\n}\n\ngroup SenderAuthorPractitionerItems(source src : BackboneElement, target practitioner : Practitioner) {\n  src.item as item where ((linkId.value = 'sender.author.practitioner.familyName') and answer.exists()) -&gt;  practitioner.name as name share practitionerName,  name.family = (item.answer.value);\n  src.item as item where ((linkId.value = 'sender.author.practitioner.givenName') and answer.exists()) -&gt;  practitioner.name as name share practitionerName,  name.given = (item.answer.value);\n  src.item as item where ((linkId.value = 'sender.author.practitioner.title') and answer.exists()) -&gt;  practitioner.name as name share practitionerName,  name.prefix = (item.answer.value) as prefix,  prefix.extension as ext,  ext.url = 'http://hl7.org/fhir/StructureDefinition/iso21090-EN-qualifier',  ext.value = create('code') as value,  value.value = 'AC' &quot;title&quot;;\n  src.item as item where ((linkId.value = 'sender.author.practitioner.gln') and answer.exists()) -&gt;  practitioner.identifier as value,  value.system = 'urn:oid:2.51.1.3',  value.value = (item.answer.value) &quot;gln&quot;;\n  src.item as item where ((linkId.value = 'sender.author.practitioner.zsr') and answer.exists()) -&gt;  practitioner.identifier as value,  value.system = 'urn:oid:2.16.756.5.30.1.123.100.2.1.1',  value.value = (item.answer.value) &quot;zsr&quot;;\n  src.item as item where ((linkId.value = 'sender.author.practitioner.phone') and answer.exists()) -&gt;  practitioner.telecom as value,  value.system = 'phone',  value.value = (item.answer.value) &quot;phone&quot;;\n  src.item as item where ((linkId.value = 'sender.author.practitioner.email') and answer.exists()) -&gt;  practitioner.telecom as value,  value.system = 'email',  value.value = (item.answer.value) &quot;email&quot;;\n}\n\ngroup SenderAuthorOrganizationItems(source src : BackboneElement, target organization : Organization) {\n  src.item as item where ((linkId.value = 'sender.author.organization.name') and answer.exists()) -&gt; organization.name = (item.answer.value);\n  src.item as item where ((linkId.value = 'sender.author.organization.gln') and answer.exists()) -&gt;  organization.identifier as value,  value.system = 'urn:oid:2.51.1.3',  value.value = (item.answer.value) &quot;gln&quot;;\n  src.item as item where ((linkId.value = 'sender.author.organization.zsr') and answer.exists()) -&gt;  organization.identifier as value,  value.system = 'urn:oid:2.16.756.5.30.1.123.100.2.1.1',  value.value = (item.answer.value) &quot;zsr&quot;;\n  src.item as item where ((linkId.value = 'sender.author.organization.streetAddressLine') and answer.exists()) -&gt; organization.address as address share orgAddress then {\n    item.answer as answer -&gt; address.line = (answer.value) &quot;streetAddressLine&quot;;\n  } &quot;answer&quot;;\n  src.item as item where ((linkId.value = 'sender.author.organization.postalCode') and answer.exists()) -&gt;  organization.address as address share orgAddress,  address.postalCode = (item.answer.value) &quot;postalCode&quot;;\n  src.item as item where ((linkId.value = 'sender.author.organization.city') and answer.exists()) -&gt;  organization.address as address share orgAddress,  address.city = (item.answer.value) &quot;city&quot;;\n  src.item as item where ((linkId.value = 'sender.author.organization.country') and answer.exists()) -&gt;  organization.address as address share orgAddress,  address.country = (item.answer.value) &quot;country&quot;;\n}\n\ngroup SenderAuthorItems(source src : BackboneElement, target practitionerRole : practitionerRole, target practitioner : Practitioner, target organization : Organization) {\n  src.item as item where (linkId.value = 'sender.author.practitioner') then SenderAuthorPractitionerItems(item, practitioner);\n  src.item as item where (linkId.value = 'sender.author.organization') then SenderAuthorOrganizationItems(item, organization);\n}\n\ngroup SenderDataEntererPractitionerItems(source src : BackboneElement, target practitioner : Practitioner) {\n  src.item as item where ((linkId.value = 'sender.dataenterer.practitioner.familyName') and answer.exists()) -&gt;  practitioner.name as name share practitionerName,  name.family = (item.answer.value);\n  src.item as item where ((linkId.value = 'sender.dataenterer.practitioner.givenName') and answer.exists()) -&gt;  practitioner.name as name share practitionerName,  name.given = (item.answer.value);\n  src.item as item where ((linkId.value = 'sender.dataenterer.practitioner.phone') and answer.exists()) -&gt;  practitioner.telecom as value,  value.system = 'phone',  value.value = (item.answer.value) &quot;phone&quot;;\n  src.item as item where ((linkId.value = 'sender.dataenterer.practitioner.email') and answer.exists()) -&gt;  practitioner.telecom as value,  value.system = 'email',  value.value = (item.answer.value) &quot;email&quot;;\n}\n\ngroup SenderDataEntererItems(source src : BackboneElement, target practitionerRole : practitionerRole, target practitioner : Practitioner, target organization : Organization) {\n  src.item as item where (linkId.value = 'sender.dataenterer.practitioner') then SenderDataEntererPractitionerItems(item, practitioner);\n}\n\ngroup ChExtEprDataEnterer(source src : BackboneElement, target practitionerRole : PractitionerRole, target ext : Extension) {\n  src -&gt; ext.url = 'http://fhir.ch/ig/ch-core/StructureDefinition/ch-ext-epr-dataenterer' &quot;url&quot;;\n  src -&gt;  ext.extension as ext,  ext.url = 'enterer',  ext.value = create('Reference') as reference,  reference.reference = ('urn:uuid:' + %practitionerRole.id) &quot;practitionerRole&quot;;\n}\n\ngroup SenderAuthorInit(source src : BackboneElement, target bundle : Bundle, target composition : Composition, target serviceRequest : ServiceRequest) {\n  src -&gt;  bundle.entry as e,  e.resource = create('PractitionerRole') as practitionerRole,  practitionerRole.id = uuid() as uuid,  e.fullUrl = append('urn:uuid:', uuid),  bundle.entry as e2,  e2.resource = create('Practitioner') as practitioner,  practitioner.id = uuid() as uuid2,  e2.fullUrl = append('urn:uuid:', uuid2),  bundle.entry as e3,  e3.resource = create('Organization') as organization,  organization.id = uuid() as uuid3,  e3.fullUrl = append('urn:uuid:', uuid3),  composition.author = create('Reference') as reference,  reference.reference = append('urn:uuid:', uuid),  serviceRequest.requester = create('Reference') as reference,  reference.reference = append('urn:uuid:', uuid),  practitionerRole.practitioner = create('Reference') as reference,  reference.reference = append('urn:uuid:', uuid2),  practitionerRole.organization = create('Reference') as reference,  reference.reference = append('urn:uuid:', uuid3) then {\n    src.item as item where (linkId.value = 'sender.author') then SenderAuthorItems(item, practitionerRole, practitioner, organization) &quot;author&quot;;\n    src.item as item where (linkId.value = 'sender.dataenterer') then {\n      item -&gt;  bundle.entry as e4,  e4.resource = create('PractitionerRole') as practitionerRoleDataEnterer,  practitionerRoleDataEnterer.id = uuid() as uuid4,  e4.fullUrl = append('urn:uuid:', uuid4),  composition.extension as extension,  bundle.entry as e5,  e5.resource = create('Practitioner') as practitionerDataEnterer,  practitionerDataEnterer.id = uuid() as uuid5,  e5.fullUrl = append('urn:uuid:', uuid5),  practitionerRoleDataEnterer.practitioner = create('Reference') as reference,  reference.reference = append('urn:uuid:', uuid5),  practitionerRoleDataEnterer.organization = create('Reference') as reference,  reference.reference = append('urn:uuid:', uuid3) then {\n        item then SenderDataEntererItems(item, practitionerRoleDataEnterer, practitionerDataEnterer, organization) &quot;data&quot;;\n        item then ChExtEprDataEnterer(item, practitionerRoleDataEnterer, extension) &quot;extension&quot;;\n      } &quot;items&quot;;\n    } &quot;dataenterer&quot;;\n  } &quot;sender&quot;;\n}\n\ngroup ReceiverCopyRelatedPersonItems(source src : BackboneElement, target relatedPerson : RelatedPerson) {\n  src.item as item where ((linkId.value = 'receiverCopy.relatedPerson.familyName') and answer.exists()) -&gt;  relatedPerson.name as name share name,  name.family = (item.answer.value);\n  src.item as item where ((linkId.value = 'receiverCopy.relatedPerson.givenName') and answer.exists()) -&gt;  relatedPerson.name as name share name,  name.given = (item.answer.value);\n  src.item as item where ((linkId.value = 'receiverCopy.relatedPerson.phone') and answer.exists()) then {\n    item.answer as answer -&gt;  relatedPerson.telecom as value,  value.system = 'phone',  value.value = (answer.value) &quot;phone&quot;;\n  } &quot;phone&quot;;\n  src.item as item where ((linkId.value = 'receiverCopy.relatedPerson.email') and answer.exists()) -&gt;  relatedPerson.telecom as value,  value.system = 'email',  value.value = (item.answer.value) &quot;email&quot;;\n  src.item as item where ((linkId.value = 'receiverCopy.relatedPerson.streetAddressLine') and answer.exists()) -&gt; relatedPerson.address as address share orgAddress then {\n    item.answer as answer -&gt; address.line = (answer.value) &quot;streetAddressLine&quot;;\n  } &quot;answer&quot;;\n  src.item as item where ((linkId.value = 'receiverCopy.relatedPerson.postalCode') and answer.exists()) -&gt;  relatedPerson.address as address share orgAddress,  address.postalCode = (item.answer.value) &quot;postalCode&quot;;\n  src.item as item where ((linkId.value = 'receiverCopy.relatedPerson.city') and answer.exists()) -&gt;  relatedPerson.address as address share orgAddress,  address.city = (item.answer.value) &quot;city&quot;;\n  src.item as item where ((linkId.value = 'receiverCopy.relatedPerson.country') and answer.exists()) -&gt;  relatedPerson.address as address share orgAddress,  address.country = (item.answer.value) &quot;country&quot;;\n}\n\ngroup ReceiverCopyPractitionerItems(source src : BackboneElement, target practitioner : Practitioner) {\n  src.item as item where ((linkId.value = 'receiverCopy.practitionerRole.practitioner.familyName') and answer.exists()) -&gt;  practitioner.name as name share practitionerName,  name.family = (item.answer.value);\n  src.item as item where ((linkId.value = 'receiverCopy.practitionerRole.practitioner.givenName') and answer.exists()) -&gt;  practitioner.name as name share practitionerName,  name.given = (item.answer.value);\n  src.item as item where ((linkId.value = 'receiverCopy.practitionerRole.practitioner.title') and answer.exists()) -&gt;  practitioner.name as name share practitionerName,  name.prefix = (item.answer.value) as prefix,  prefix.extension as ext,  ext.url = 'http://hl7.org/fhir/StructureDefinition/iso21090-EN-qualifier',  ext.value = create('code') as value,  value.value = 'AC' &quot;title&quot;;\n  src.item as item where ((linkId.value = 'receiverCopy.practitionerRole.practitioner.phone') and answer.exists()) -&gt;  practitioner.telecom as value,  value.system = 'phone',  value.value = (item.answer.value) &quot;phone&quot;;\n  src.item as item where ((linkId.value = 'receiverCopy.practitionerRole.practitioner.email') and answer.exists()) -&gt;  practitioner.telecom as value,  value.system = 'email',  value.value = (item.answer.value) &quot;email&quot;;\n}\n\ngroup ReceiverCopyOrganizationItems(source src : BackboneElement, target organization : Organization) {\n  src.item as item where ((linkId.value = 'receiverCopy.practitionerRole.organization.name') and answer.exists()) -&gt; organization.name = (item.answer.value);\n  src.item as item where ((linkId.value = 'receiverCopy.practitionerRole.organization.streetAddressLine') and answer.exists()) -&gt; organization.address as address share orgAddress then {\n    item.answer as answer -&gt; address.line = (answer.value) &quot;streetAddressLine&quot;;\n  } &quot;answer&quot;;\n  src.item as item where ((linkId.value = 'receiverCopy.practitionerRole.organization.postalCode') and answer.exists()) -&gt;  organization.address as address share orgAddress,  address.postalCode = (item.answer.value) &quot;postalCode&quot;;\n  src.item as item where ((linkId.value = 'receiverCopy.practitionerRole.organization.city') and answer.exists()) -&gt;  organization.address as address share orgAddress,  address.city = (item.answer.value) &quot;city&quot;;\n  src.item as item where ((linkId.value = 'receiverCopy.practitionerRole.organization.country') and answer.exists()) -&gt;  organization.address as address share orgAddress,  address.country = (item.answer.value) &quot;country&quot;;\n}\n\ngroup ReceiverCopyPractitionerRoleItems(source src : BackboneElement, target bundle : Bundle, target practitionerRole : practitionerRole) {\n  src.item as item where (linkId.value = 'receiverCopy.practitionerRole.practitioner') -&gt;  bundle.entry as e2,  e2.resource = create('Practitioner') as practitioner,  practitioner.id = uuid() as uuid2,  practitionerRole.practitioner = create('Reference') as reference,  reference.reference = append('urn:uuid:', uuid2),  e2.fullUrl = append('urn:uuid:', uuid2) then ReceiverCopyPractitionerItems(item, practitioner);\n  src.item as item where (linkId.value = 'receiverCopy.practitionerRole.organization') -&gt;  bundle.entry as e3,  e3.resource = create('Organization') as organization,  organization.id = uuid() as uuid3,  practitionerRole.organization = create('Reference') as reference,  reference.reference = append('urn:uuid:', uuid3),  e3.fullUrl = append('urn:uuid:', uuid3) then ReceiverCopyOrganizationItems(item, organization);\n}\n\ngroup ExtOrfCopyReceiverPatient(source src : BackboneElement, target patient : Patient, target ext : Extension) {\n  src -&gt; ext.url = 'http://fhir.ch/ig/ch-orf/StructureDefinition/ch-orf-copyreceiver' &quot;url&quot;;\n  src -&gt;  ext.value = create('Reference') as reference,  reference.reference = ('urn:uuid:' + %patient.id) &quot;patient&quot;;\n}\n\ngroup ExtOrfCopyReceiver(source src : BackboneElement, target res, target ext : Extension) {\n  src -&gt; ext.url = 'http://fhir.ch/ig/ch-orf/StructureDefinition/ch-orf-copyreceiver' &quot;url&quot;;\n  src -&gt;  ext.value = create('Reference') as reference,  reference.reference = ('urn:uuid:' + %res.id) &quot;organization&quot;;\n}\n\ngroup ReceiverCopy(source grp : BackboneElement, target bundle : Bundle, target patient : Patient, target composition : Composition, target serviceRequest : ServiceRequest) {\n  grp.item as item where (linkId = 'receiverCopy.practitionerRole') -&gt;  bundle.entry as e4,  e4.resource = create('PractitionerRole') as practitionerrole,  composition.extension as extension,  practitionerrole.id = uuid() as uuid4,  e4.fullUrl = append('urn:uuid:', uuid4) then {\n    item then ReceiverCopyPractitionerRoleItems(item, bundle, practitionerrole) &quot;data&quot;;\n    item then ExtOrfCopyReceiver(item, practitionerrole, extension) &quot;extension&quot;;\n  } &quot;receiverCopyPractitionerRole&quot;;\n  grp.item as item where (linkId = 'receiverCopy.patient') -&gt; composition.extension as extension then {\n    item then ExtOrfCopyReceiver(item, patient, extension) &quot;extension&quot;;\n  } &quot;receiverCopyPractitionerRole&quot;;\n  grp.item as item where (linkId = 'receiverCopy.relatedPerson') -&gt;  bundle.entry as e4,  e4.resource = create('RelatedPerson') as relatedPerson,  composition.extension as extension,  relatedPerson.id = uuid() as uuid4,  relatedPerson.patient as reference,  reference.reference = ('urn:uuid:' + %patient.id),  e4.fullUrl = append('urn:uuid:', uuid4) then {\n    item then ReceiverCopyRelatedPersonItems(item, relatedPerson) &quot;data&quot;;\n    item then ExtOrfCopyReceiver(item, relatedPerson, extension) &quot;extension&quot;;\n  } &quot;receiverCopyPractitionerRole&quot;;\n}\n\ngroup Appointment(source grp : BackboneElement, target bundle : Bundle, target composition : Composition, target serviceRequest : ServiceRequest) {\n  grp -&gt;  bundle.entry as e4,  e4.resource = create('Appointment') as appointment,  appointment.id = uuid() as uuid4,  e4.fullUrl = ('urn:uuid:' + %uuid4),  serviceRequest.extension as extension,  extension.url = 'http://fhir.ch/ig/ch-orf/StructureDefinition/ch-orf-locationandtime',  extension.value = create('Reference') as reference,  reference.reference = ('urn:uuid:' + %uuid4) then {\n    grp.item as item where ((linkId.value = 'appointment.status') and (answer.value.code = 'proposed')) -&gt; appointment.status = (item.answer.value.code) then {\n      grp.item as itemp where (linkId.value = 'appointment.requestedPeriod') then {\n        itemp.item as item2 where ((linkId.value = 'appointment.requestedPeriod.start') and answer.exists()) -&gt;  appointment.requestedPeriod as requestedPeriod,  requestedPeriod.start = (item2.answer.value),  requestedPeriod.end = (item2.answer.value) then {\n          itemp.item as item3 where ((linkId.value = 'appointment.requestedPeriod.end') and answer.exists()) -&gt; requestedPeriod.end = (item3.answer.value) &quot;start&quot;;\n        } &quot;start&quot;;\n      } &quot;requestedPeriod&quot;;\n    } &quot;proposed&quot;;\n    grp.item as item where ((linkId.value = 'appointment.status') and ((answer.value.code = 'pending') or (answer.value.code = 'booked'))) -&gt; appointment.status = (item.answer.value.code) then {\n      grp.item as itemp where (linkId.value = 'appointment.requestedPeriod') then {\n        itemp.item as item2 where ((linkId.value = 'appointment.requestedPeriod.start') and answer.exists()) -&gt;  appointment.start = (item2.answer.value),  appointment.end = (item2.answer.value) then {\n          itemp.item as item3 where ((linkId.value = 'appointment.requestedPeriod.end') and answer.exists()) -&gt; appointment.end = (item3.answer.value) &quot;start&quot;;\n        } &quot;start&quot;;\n      } &quot;startend&quot;;\n    } &quot;pendingorbooked&quot;;\n    grp.item as item where ((linkId.value = 'appointment.patientInstruction') and answer.exists()) -&gt; appointment.patientInstruction = (item.answer.value) &quot;patientInstruction&quot;;\n    grp.item as item where (linkId.value = 'appointment.location') then {\n      item -&gt;  bundle.entry as e5,  e5.resource = create('Location') as location,  location.id = uuid() as uuid5,  e5.fullUrl = ('urn:uuid:' + %uuid5),  appointment.participant as participant,  participant.status = 'tentative',  participant.actor = create('Reference') as actor,  actor.reference = ('urn:uuid:' + %location.id) then {\n        item.item as item3 where ((linkId.value = 'appointment.location.name') and answer.exists()) -&gt; location.name = (item3.answer.value);\n        item.item as item3 where ((linkId.value = 'appointment.location.phone') and answer.exists()) -&gt;  location.telecom as value,  value.system = 'phone',  value.value = (item3.answer.value) &quot;phone&quot;;\n        item.item as item3 where ((linkId.value = 'appointment.location.email') and answer.exists()) -&gt;  location.telecom as value,  value.system = 'email',  value.value = (item3.answer.value) &quot;email&quot;;\n        item.item as item3 where ((linkId.value = 'appointment.location.streetAddressLine') and answer.exists()) -&gt; location.address as address share orgAddress then {\n          item.answer as answer -&gt; address.line = (answer.value) &quot;line&quot;;\n        } &quot;streetAddressLine&quot;;\n        item.item as item3 where ((linkId.value = 'appointment.location.postalCode') and answer.exists()) -&gt;  location.address as address share orgAddress,  address.postalCode = (item3.answer.value) &quot;postalCode&quot;;\n        item.item as item3 where ((linkId.value = 'appointment.location.city') and answer.exists()) -&gt;  location.address as address share orgAddress,  address.city = (item3.answer.value) &quot;city&quot;;\n        item.item as item3 where ((linkId.value = 'appointment.location.country') and answer.exists()) -&gt;  location.address as address share orgAddress,  address.country = (item3.answer.value) &quot;country&quot;;\n      } &quot;location&quot;;\n    } &quot;location&quot;;\n  } &quot;Appointment&quot;;\n}\n\ngroup PreviousResults(source grp : BackboneElement, target bundle : Bundle, target serviceRequest : ServiceRequest) {\n  grp.item as item where ((linkId = 'previousResults.attachment') and answer.exists()) then {\n    item.answer as answer then {\n      answer.value : Attachment as attachment -&gt;  bundle.entry as e,  e.resource = create('Media') as media,  media.id = uuid() as uuid,  media.status = 'completed',  e.fullUrl = append('urn:uuid:', uuid),  media.content = attachment,  serviceRequest.supportingInfo as supportingInfo,  supportingInfo.reference = ('urn:uuid:' + uuid) &quot;media&quot;;\n    };\n  };\n}\n\ngroup Note(source grp : BackboneElement, target serviceRequest : ServiceRequest) {\n  grp.item as item where ((linkId = 'note.text') and answer.exists()) -&gt;  serviceRequest.note as note,  note.text = (item.answer.value) &quot;text&quot;;\n}\n\ngroup QrToBundle(source qr : QuestionnaireResponse, target q : Questionnaire, target patient : Patient, target questionnaireresp : QuestionnaireResponse, target servicerequest : ServiceRequest, target composition : Composition, target bundle : Bundle) {\n  qr -&gt; bundle.id = uuid() &quot;id&quot;;\n  qr -&gt; bundle.type = 'document' &quot;type&quot;;\n  qr then OrfComposition(qr, q, composition, patient, questionnaireresp, servicerequest, bundle) &quot;composition&quot;;\n  qr then QrToGroups(qr, patient, bundle, composition, servicerequest) &quot;qrgroups&quot;;\n}\n\ngroup OrfComposition(source qr : QuestionnaireResponse, target q : Questionnaire, target tgt : Composition, target patient : Patient, target questionnaireresp : QuestionnaireResponse, target servicerequest : ServiceRequest, target bundle : Bundle) {\n  qr -&gt; tgt.status = 'final' &quot;status&quot;;\n  qr -&gt;  tgt.subject = create('Reference') as reference,  reference.reference = ('urn:uuid:' + %patient.id) &quot;subject&quot;;\n  qr -&gt;  tgt.section as tgtSection,  tgtSection.title = 'Order-Referral',  tgtSection.code as code,  code.coding as coding,  coding.system = 'http://loinc.org',  coding.code = '93037-0',  coding.display = 'Portable medical order form',  tgtSection.entry = create('Reference') as reference,  reference.reference = ('urn:uuid:' + %questionnaireresp.id),  tgtSection.entry = create('Reference') as reference,  reference.reference = ('urn:uuid:' + %servicerequest.id),  tgtSection.entry = create('Reference') as reference,  reference.reference = ('urn:uuid:' + %q.id) &quot;sections&quot;;\n  qr -&gt;  servicerequest.status = 'active',  servicerequest.intent = 'order',  servicerequest.subject = create('Reference') as reference,  reference.reference = ('urn:uuid:' + %patient.id) &quot;servicerequest&quot;;\n}\n\n</pre>\n      </div>"},"url":"http://fhir.ch/ig/ch-orf/StructureMap/OrfQrToBundle","version":"1.0.0","name":"OrfQrToBundle","status":"draft","date":"2022-02-22T11:05:43+01:00","publisher":"HL7 Switzerland","contact":[{"name":"HL7 Switzerland","telecom":[{"system":"url","value":"https://www.hl7.ch/"}]}],"description":"\r\nORF QuestionnaireResponse to Bundle\r\n2021-01-11 Oliver Egger, copyright ahdis ag, Apache License\r\nQRF Questionnaire: http://build.fhir.org/ig/hl7ch/ch-orf/Questionnaire-order-referral-form.html\r\nQRF QuestionnaireResponse: http://build.fhir.org/ig/hl7ch/ch-orf/QuestionnaireResponse-order-referral-form.xml.html\r\nBundle: http://build.fhir.org/ig/hl7ch/ch-orf/StructureDefinition-ch-orf-document.html","jurisdiction":[{"coding":[{"system":"urn:iso:std:iso:3166","code":"CH"}]}],"copyright":"CC-BY-SA-4.0","structure":[{"url":"http://hl7.org/fhir/StructureDefinition/QuestionnaireResponse","mode":"source","alias":"QuestionnaireResponse"},{"url":"http://hl7.org/fhir/StructureDefinition/Bundle","mode":"target","alias":"Bundle"},{"url":"http://hl7.org/fhir/StructureDefinition/Patient","mode":"target","alias":"Patient"},{"url":"http://hl7.org/fhir/StructureDefinition/RelatedPerson","mode":"target","alias":"RelatedPerson"},{"url":"http://hl7.org/fhir/StructureDefinition/Organization","mode":"target","alias":"Organization"},{"url":"http://hl7.org/fhir/StructureDefinition/Practitioner","mode":"target","alias":"Practitioner"},{"url":"http://hl7.org/fhir/StructureDefinition/PractitionerRole","mode":"target","alias":"PractitionerRole"},{"url":"http://hl7.org/fhir/StructureDefinition/ServiceRequest","mode":"target","alias":"ServiceRequest"},{"url":"http://hl7.org/fhir/StructureDefinition/BackboneElement","mode":"target","alias":"BackboneElement"}],"group":[{"name":"OrfQrToBundle","typeMode":"none","input":[{"name":"qr","type":"QuestionnaireResponse","mode":"source"},{"name":"bundle","type":"Bundle","mode":"target"}],"rule":[{"name":"documentIdentifier","source":[{"context":"qr"}],"target":[{"context":"bundle","contextType":"variable","element":"identifier","variable":"documentIdentifier"},{"context":"documentIdentifier","contextType":"variable","element":"system","transform":"copy","parameter":[{"valueString":"urn:ietf:rfc:3986"}]},{"contextType":"variable","variable":"uuidDoc","transform":"uuid"},{"context":"documentIdentifier","contextType":"variable","element":"value","transform":"append","parameter":[{"valueString":"urn:uuid:"},{"valueId":"uuidDoc"}]}]},{"name":"orfbundle","source":[{"context":"qr","variable":"qrcp"}],"target":[{"context":"bundle","contextType":"variable","element":"entry","variable":"e"},{"context":"e","contextType":"variable","element":"resource","variable":"composition","transform":"create","parameter":[{"valueString":"Composition"}]},{"context":"composition","contextType":"variable","element":"id","variable":"uuid","transform":"uuid"},{"context":"e","contextType":"variable","element":"fullUrl","transform":"append","parameter":[{"valueString":"urn:uuid:"},{"valueId":"uuid"}]},{"context":"bundle","contextType":"variable","element":"entry","variable":"e2"},{"context":"bundle","contextType":"variable","element":"timestamp","variable":"timestamp","transform":"evaluate","parameter":[{"valueString":"now()"}]},{"context":"composition","contextType":"variable","element":"date","transform":"copy","parameter":[{"valueId":"timestamp"}]},{"context":"e2","contextType":"variable","element":"resource","variable":"patient","transform":"create","parameter":[{"valueString":"Patient"}]},{"context":"patient","contextType":"variable","element":"id","variable":"uuid2","transform":"uuid"},{"context":"e2","contextType":"variable","element":"fullUrl","transform":"append","parameter":[{"valueString":"urn:uuid:"},{"valueId":"uuid2"}]},{"context":"bundle","contextType":"variable","element":"entry","variable":"e4"},{"context":"e4","contextType":"variable","element":"resource","variable":"questionnaireresp","transform":"copy","parameter":[{"valueId":"qrcp"}]},{"context":"questionnaireresp","contextType":"variable","element":"id","variable":"uuid4","transform":"uuid"},{"context":"e4","contextType":"variable","element":"fullUrl","transform":"append","parameter":[{"valueString":"urn:uuid:"},{"valueId":"uuid4"}]},{"context":"bundle","contextType":"variable","element":"entry","variable":"e5"},{"context":"e5","contextType":"variable","element":"resource","variable":"servicerequest","transform":"create","parameter":[{"valueString":"ServiceRequest"}]},{"context":"servicerequest","contextType":"variable","element":"id","variable":"uuid5","transform":"uuid"},{"context":"e5","contextType":"variable","element":"fullUrl","transform":"append","parameter":[{"valueString":"urn:uuid:"},{"valueId":"uuid5"}]}],"rule":[{"name":"orfbundle","source":[{"context":"qr","element":"questionnaire","variable":"can"}],"target":[{"context":"bundle","contextType":"variable","element":"entry","variable":"e6"},{"context":"e6","contextType":"variable","element":"resource","variable":"q","transform":"evaluate","parameter":[{"valueString":"can.resolve()"}]},{"context":"q","contextType":"variable","element":"id","variable":"uuid6","transform":"uuid"},{"context":"e6","contextType":"variable","element":"fullUrl","transform":"append","parameter":[{"valueString":"urn:uuid:"},{"valueId":"uuid6"}]}],"dependent":[{"name":"QrToBundle","variable":["qr","q","patient","questionnaireresp","servicerequest","composition","bundle"]}]}]}]},{"name":"QrToGroups","typeMode":"none","input":[{"name":"qr","type":"QuestionnaireResponse","mode":"source"},{"name":"patient","type":"Patient","mode":"target"},{"name":"bundle","type":"Bundle","mode":"target"},{"name":"composition","type":"Composition","mode":"target"},{"name":"serviceRequest","type":"ServiceRequest","mode":"target"}],"rule":[{"name":"grporder","source":[{"context":"qr","element":"item","variable":"grp","condition":"linkId = 'order'"}],"dependent":[{"name":"OrderItems","variable":["grp","bundle","composition","serviceRequest"]}]},{"name":"receiver","source":[{"context":"qr","element":"item","variable":"grp","condition":"linkId = 'receiver'"}],"dependent":[{"name":"ReceiverInit","variable":["grp","bundle","composition","serviceRequest"]}]},{"name":"grppatient","source":[{"context":"qr","element":"item","variable":"grp","condition":"linkId = 'patient'"}],"dependent":[{"name":"PatientItems","variable":["grp","patient"]}]},{"name":"grprequestedencounter","source":[{"context":"qr","element":"item","variable":"grp","condition":"linkId = 'requestedEncounter'"}],"dependent":[{"name":"RequestedEncounterItems","variable":["grp","bundle","patient","serviceRequest"]}]},{"name":"grprequestedencounter","source":[{"context":"qr","element":"item","variable":"grp","condition":"linkId = 'coverage'"}],"dependent":[{"name":"Coverage","variable":["grp","bundle","patient","serviceRequest"]}]},{"name":"grpsender","source":[{"context":"qr","element":"item","variable":"grp","condition":"linkId = 'sender'"}],"dependent":[{"name":"SenderAuthorInit","variable":["grp","bundle","composition","serviceRequest"]}]},{"name":"grpsender","source":[{"context":"qr","element":"item","variable":"grp","condition":"linkId = 'receiverCopy'"}],"dependent":[{"name":"ReceiverCopy","variable":["grp","bundle","patient","composition","serviceRequest"]}]},{"name":"grpsender","source":[{"context":"qr","element":"item","variable":"grp","condition":"linkId = 'appointment'"}],"dependent":[{"name":"Appointment","variable":["grp","bundle","composition","serviceRequest"]}]},{"name":"previousResults","source":[{"context":"qr","element":"item","variable":"grp","condition":"linkId = 'previousResults'"}],"dependent":[{"name":"PreviousResults","variable":["grp","bundle","serviceRequest"]}]},{"name":"note","source":[{"context":"qr","element":"item","variable":"grp","condition":"linkId = 'note'"}],"dependent":[{"name":"Note","variable":["grp","serviceRequest"]}]}]},{"name":"OrderItems","typeMode":"none","input":[{"name":"src","type":"BackboneElement","mode":"source"},{"name":"bundle","type":"Bundle","mode":"target"},{"name":"composition","mode":"target"},{"name":"serviceRequest","type":"ServiceRequest","mode":"target"}],"rule":[{"name":"order.precedentDocumentIdentifier","source":[{"context":"src","element":"item","variable":"item","condition":"((linkId.value = 'order.precedentDocumentIdentifier') and answer.exists())"}],"target":[{"context":"composition","contextType":"variable","element":"extension","variable":"ext"},{"context":"ext","contextType":"variable","element":"url","transform":"copy","parameter":[{"valueString":"http://fhir.ch/ig/ch-orf/StructureDefinition/ch-orf-precedentdocument"}]},{"context":"ext","contextType":"variable","element":"value","variable":"value","transform":"create","parameter":[{"valueString":"Identifier"}]},{"context":"value","contextType":"variable","element":"system","transform":"copy","parameter":[{"valueString":"urn:ietf:rfc:3986"}]},{"context":"value","contextType":"variable","element":"value","transform":"evaluate","parameter":[{"valueString":"'urn:uuid:' + item.answer.valueString"}]}]},{"name":"order.placerOrderIdentifier","source":[{"context":"src","element":"item","variable":"item","condition":"((linkId.value = 'order.placerOrderIdentifier') and answer.exists())"}],"target":[{"context":"serviceRequest","contextType":"variable","element":"identifier","variable":"value","listMode":["share"],"listRuleId":"placer"},{"context":"value","contextType":"variable","element":"type","variable":"type"},{"context":"type","contextType":"variable","element":"coding","variable":"coding"},{"context":"coding","contextType":"variable","element":"system","transform":"copy","parameter":[{"valueString":"http://terminology.hl7.org/CodeSystem/v2-0203"}]},{"context":"coding","contextType":"variable","element":"code","transform":"copy","parameter":[{"valueString":"PLAC"}]},{"context":"value","contextType":"variable","element":"value","transform":"evaluate","parameter":[{"valueString":"item.answer.valueString"}]}]},{"name":"order.placerOrderIdentifierDomain","source":[{"context":"src","element":"item","variable":"item","condition":"((linkId.value = 'order.placerOrderIdentifierDomain') and answer.exists())"}],"target":[{"context":"serviceRequest","contextType":"variable","element":"identifier","variable":"value","listMode":["share"],"listRuleId":"placer"},{"context":"value","contextType":"variable","element":"system","transform":"evaluate","parameter":[{"valueString":"item.answer.valueString"}]}]},{"name":"order.fillerOrderIdentifier","source":[{"context":"src","element":"item","variable":"item","condition":"((linkId.value = 'order.fillerOrderIdentifier') and answer.exists())"}],"target":[{"context":"serviceRequest","contextType":"variable","element":"identifier","variable":"value","listMode":["share"],"listRuleId":"filler"},{"context":"value","contextType":"variable","element":"type","variable":"type"},{"context":"type","contextType":"variable","element":"coding","variable":"coding"},{"context":"coding","contextType":"variable","element":"system","transform":"copy","parameter":[{"valueString":"http://terminology.hl7.org/CodeSystem/v2-0203"}]},{"context":"coding","contextType":"variable","element":"code","transform":"copy","parameter":[{"valueString":"FILL"}]},{"context":"value","contextType":"variable","element":"value","transform":"evaluate","parameter":[{"valueString":"item.answer.valueString"}]}]},{"name":"order.fillerOrderIdentifierDomain","source":[{"context":"src","element":"item","variable":"item","condition":"((linkId.value = 'order.fillerOrderIdentifierDomain') and answer.exists())"}],"target":[{"context":"serviceRequest","contextType":"variable","element":"identifier","variable":"value","listMode":["share"],"listRuleId":"filler"},{"context":"value","contextType":"variable","element":"system","transform":"evaluate","parameter":[{"valueString":"item.answer.valueString"}]}]},{"name":"item","source":[{"context":"src","element":"item","variable":"item","condition":"((linkId.value = 'order.dateTime') and answer.exists())"}],"target":[{"context":"serviceRequest","contextType":"variable","element":"authoredOn","transform":"evaluate","parameter":[{"valueString":"item.answer.value"}]}]},{"name":"item","source":[{"context":"src","element":"item","variable":"item","condition":"((linkId.value = 'order.priority') and answer.exists())"}],"target":[{"context":"serviceRequest","contextType":"variable","element":"priority","transform":"evaluate","parameter":[{"valueString":"item.answer.value.code"}]}]},{"name":"order.notificationContactDocument","source":[{"context":"src","element":"item","variable":"item","condition":"(linkId.value = 'order.notificationContactDocument')"}],"rule":[{"name":"order.notificationContactDocument.items","source":[{"context":"item"}],"target":[{"context":"bundle","contextType":"variable","element":"entry","variable":"e4"},{"context":"e4","contextType":"variable","element":"resource","variable":"practitionerRoleDataEnterer","transform":"create","parameter":[{"valueString":"PractitionerRole"}]},{"context":"practitionerRoleDataEnterer","contextType":"variable","element":"id","variable":"uuid4","transform":"uuid"},{"context":"e4","contextType":"variable","element":"fullUrl","transform":"append","parameter":[{"valueString":"urn:uuid:"},{"valueId":"uuid4"}]},{"context":"composition","contextType":"variable","element":"extension","variable":"extension"},{"context":"bundle","contextType":"variable","element":"entry","variable":"e5"},{"context":"e5","contextType":"variable","element":"resource","variable":"practitionerDataEnterer","transform":"create","parameter":[{"valueString":"Practitioner"}]},{"context":"practitionerDataEnterer","contextType":"variable","element":"id","variable":"uuid5","transform":"uuid"},{"context":"e5","contextType":"variable","element":"fullUrl","transform":"append","parameter":[{"valueString":"urn:uuid:"},{"valueId":"uuid5"}]},{"context":"practitionerRoleDataEnterer","contextType":"variable","element":"practitioner","variable":"reference","transform":"create","parameter":[{"valueString":"Reference"}]},{"context":"reference","contextType":"variable","element":"reference","transform":"append","parameter":[{"valueString":"urn:uuid:"},{"valueId":"uuid5"}]}],"rule":[{"name":"data","source":[{"context":"item"}],"dependent":[{"name":"UrgentNotificationContactForRequestItems","variable":["item","practitionerRoleDataEnterer","practitionerDataEnterer"]}]},{"name":"extension","source":[{"context":"item"}],"dependent":[{"name":"ExtOrfUrgentNotificationContactForRequest","variable":["item","practitionerRoleDataEnterer","extension"]}]}]}]},{"name":"order.notificationContactDocumentResponse","source":[{"context":"src","element":"item","variable":"item","condition":"(linkId.value = 'order.notificationContactDocumentResponse')"}],"rule":[{"name":"order.notificationContactDocumentResponse.items","source":[{"context":"item"}],"target":[{"context":"bundle","contextType":"variable","element":"entry","variable":"e4"},{"context":"e4","contextType":"variable","element":"resource","variable":"practitionerRoleDataEnterer","transform":"create","parameter":[{"valueString":"PractitionerRole"}]},{"context":"practitionerRoleDataEnterer","contextType":"variable","element":"id","variable":"uuid4","transform":"uuid"},{"context":"e4","contextType":"variable","element":"fullUrl","transform":"append","parameter":[{"valueString":"urn:uuid:"},{"valueId":"uuid4"}]},{"context":"composition","contextType":"variable","element":"extension","variable":"extension"},{"context":"bundle","contextType":"variable","element":"entry","variable":"e5"},{"context":"e5","contextType":"variable","element":"resource","variable":"practitionerDataEnterer","transform":"create","parameter":[{"valueString":"Practitioner"}]},{"context":"practitionerDataEnterer","contextType":"variable","element":"id","variable":"uuid5","transform":"uuid"},{"context":"e5","contextType":"variable","element":"fullUrl","transform":"append","parameter":[{"valueString":"urn:uuid:"},{"valueId":"uuid5"}]},{"context":"practitionerRoleDataEnterer","contextType":"variable","element":"practitioner","variable":"reference","transform":"create","parameter":[{"valueString":"Reference"}]},{"context":"reference","contextType":"variable","element":"reference","transform":"append","parameter":[{"valueString":"urn:uuid:"},{"valueId":"uuid5"}]}],"rule":[{"name":"data","source":[{"context":"item"}],"dependent":[{"name":"UrgentNotificationContactForResponseItems","variable":["item","practitionerRoleDataEnterer","practitionerDataEnterer"]}]},{"name":"extension","source":[{"context":"item"}],"dependent":[{"name":"ExtOrfUrgentNotificationContactForResponse","variable":["item","practitionerRoleDataEnterer","extension"]}]}]}]}]},{"name":"UrgentNotificationContactForRequestPractitionerItems","typeMode":"none","input":[{"name":"src","type":"BackboneElement","mode":"source"},{"name":"practitioner","type":"Practitioner","mode":"target"}],"rule":[{"name":"item","source":[{"context":"src","element":"item","variable":"item","condition":"((linkId.value = 'order.notificationContactDocument.practitioner.familyName') and answer.exists())"}],"target":[{"context":"practitioner","contextType":"variable","element":"name","variable":"name","listMode":["share"],"listRuleId":"practitionerName"},{"context":"name","contextType":"variable","element":"family","transform":"evaluate","parameter":[{"valueString":"item.answer.value"}]}]},{"name":"item","source":[{"context":"src","element":"item","variable":"item","condition":"((linkId.value = 'order.notificationContactDocument.practitioner.givenName') and answer.exists())"}],"target":[{"context":"practitioner","contextType":"variable","element":"name","variable":"name","listMode":["share"],"listRuleId":"practitionerName"},{"context":"name","contextType":"variable","element":"given","transform":"evaluate","parameter":[{"valueString":"item.answer.value"}]}]},{"name":"sender.author.practitioner.title","source":[{"context":"src","element":"item","variable":"item","condition":"((linkId.value = 'order.notificationContactDocument.practitioner.title') and answer.exists())"}],"target":[{"context":"practitioner","contextType":"variable","element":"name","variable":"name","listMode":["share"],"listRuleId":"practitionerName"},{"context":"name","contextType":"variable","element":"prefix","variable":"prefix","transform":"evaluate","parameter":[{"valueString":"item.answer.value"}]},{"context":"prefix","contextType":"variable","element":"extension","variable":"ext"},{"context":"ext","contextType":"variable","element":"url","transform":"copy","parameter":[{"valueString":"http://hl7.org/fhir/StructureDefinition/iso21090-EN-qualifier"}]},{"context":"ext","contextType":"variable","element":"value","variable":"value","transform":"create","parameter":[{"valueString":"code"}]},{"context":"value","contextType":"variable","element":"value","transform":"copy","parameter":[{"valueString":"AC"}]}]},{"name":"sender.author.practitioner.phone","source":[{"context":"src","element":"item","variable":"item","condition":"((linkId.value = 'order.notificationContactDocument.practitioner.phone') and answer.exists())"}],"target":[{"context":"practitioner","contextType":"variable","element":"telecom","variable":"value"},{"context":"value","contextType":"variable","element":"system","transform":"copy","parameter":[{"valueString":"phone"}]},{"context":"value","contextType":"variable","element":"value","transform":"evaluate","parameter":[{"valueString":"item.answer.value"}]}]},{"name":"sender.author.practitioner.email","source":[{"context":"src","element":"item","variable":"item","condition":"((linkId.value = 'order.notificationContactDocument.practitioner.email') and answer.exists())"}],"target":[{"context":"practitioner","contextType":"variable","element":"telecom","variable":"value"},{"context":"value","contextType":"variable","element":"system","transform":"copy","parameter":[{"valueString":"email"}]},{"context":"value","contextType":"variable","element":"value","transform":"evaluate","parameter":[{"valueString":"item.answer.value"}]}]}]},{"name":"UrgentNotificationContactForRequestItems","typeMode":"none","input":[{"name":"src","type":"BackboneElement","mode":"source"},{"name":"practitionerRole","type":"practitionerRole","mode":"target"},{"name":"practitioner","type":"Practitioner","mode":"target"}],"rule":[{"name":"item","source":[{"context":"src","element":"item","variable":"item","condition":"(linkId.value = 'order.notificationContactDocument.practitioner')"}],"dependent":[{"name":"UrgentNotificationContactForRequestPractitionerItems","variable":["item","practitioner"]}]}]},{"name":"ExtOrfUrgentNotificationContactForRequest","typeMode":"none","input":[{"name":"src","type":"BackboneElement","mode":"source"},{"name":"practitionerRole","type":"PractitionerRole","mode":"target"},{"name":"ext","type":"Extension","mode":"target"}],"rule":[{"name":"url","source":[{"context":"src"}],"target":[{"context":"ext","contextType":"variable","element":"url","transform":"copy","parameter":[{"valueString":"http://fhir.ch/ig/ch-orf/StructureDefinition/ch-orf-urgentnoficationcontactforthisdocument"}]}]},{"name":"practitionerRole","source":[{"context":"src"}],"target":[{"context":"ext","contextType":"variable","element":"value","variable":"reference","transform":"create","parameter":[{"valueString":"Reference"}]},{"context":"reference","contextType":"variable","element":"reference","transform":"evaluate","parameter":[{"valueString":"'urn:uuid:' + %practitionerRole.id"}]}]}]},{"name":"UrgentNotificationContactForResponsePractitionerItems","typeMode":"none","input":[{"name":"src","type":"BackboneElement","mode":"source"},{"name":"practitioner","type":"Practitioner","mode":"target"}],"rule":[{"name":"item","source":[{"context":"src","element":"item","variable":"item","condition":"((linkId.value = 'order.notificationContactDocumentResponse.practitioner.familyName') and answer.exists())"}],"target":[{"context":"practitioner","contextType":"variable","element":"name","variable":"name","listMode":["share"],"listRuleId":"practitionerName"},{"context":"name","contextType":"variable","element":"family","transform":"evaluate","parameter":[{"valueString":"item.answer.value"}]}]},{"name":"item","source":[{"context":"src","element":"item","variable":"item","condition":"((linkId.value = 'order.notificationContactDocumentResponse.practitioner.givenName') and answer.exists())"}],"target":[{"context":"practitioner","contextType":"variable","element":"name","variable":"name","listMode":["share"],"listRuleId":"practitionerName"},{"context":"name","contextType":"variable","element":"given","transform":"evaluate","parameter":[{"valueString":"item.answer.value"}]}]},{"name":"sender.author.practitioner.title","source":[{"context":"src","element":"item","variable":"item","condition":"((linkId.value = 'order.notificationContactDocumentResponse.practitioner.title') and answer.exists())"}],"target":[{"context":"practitioner","contextType":"variable","element":"name","variable":"name","listMode":["share"],"listRuleId":"practitionerName"},{"context":"name","contextType":"variable","element":"prefix","variable":"prefix","transform":"evaluate","parameter":[{"valueString":"item.answer.value"}]},{"context":"prefix","contextType":"variable","element":"extension","variable":"ext"},{"context":"ext","contextType":"variable","element":"url","transform":"copy","parameter":[{"valueString":"http://hl7.org/fhir/StructureDefinition/iso21090-EN-qualifier"}]},{"context":"ext","contextType":"variable","element":"value","variable":"value","transform":"create","parameter":[{"valueString":"code"}]},{"context":"value","contextType":"variable","element":"value","transform":"copy","parameter":[{"valueString":"AC"}]}]},{"name":"sender.author.practitioner.phone","source":[{"context":"src","element":"item","variable":"item","condition":"((linkId.value = 'order.notificationContactDocumentResponse.practitioner.phone') and answer.exists())"}],"target":[{"context":"practitioner","contextType":"variable","element":"telecom","variable":"value"},{"context":"value","contextType":"variable","element":"system","transform":"copy","parameter":[{"valueString":"phone"}]},{"context":"value","contextType":"variable","element":"value","transform":"evaluate","parameter":[{"valueString":"item.answer.value"}]}]},{"name":"sender.author.practitioner.email","source":[{"context":"src","element":"item","variable":"item","condition":"((linkId.value = 'order.notificationContactDocumentResponse.practitioner.email') and answer.exists())"}],"target":[{"context":"practitioner","contextType":"variable","element":"telecom","variable":"value"},{"context":"value","contextType":"variable","element":"system","transform":"copy","parameter":[{"valueString":"email"}]},{"context":"value","contextType":"variable","element":"value","transform":"evaluate","parameter":[{"valueString":"item.answer.value"}]}]}]},{"name":"UrgentNotificationContactForResponseItems","typeMode":"none","input":[{"name":"src","type":"BackboneElement","mode":"source"},{"name":"practitionerRole","type":"practitionerRole","mode":"target"},{"name":"practitioner","type":"Practitioner","mode":"target"}],"rule":[{"name":"item","source":[{"context":"src","element":"item","variable":"item","condition":"(linkId.value = 'order.notificationContactDocumentResponse.practitioner')"}],"dependent":[{"name":"UrgentNotificationContactForResponsePractitionerItems","variable":["item","practitioner"]}]}]},{"name":"ExtOrfUrgentNotificationContactForResponse","typeMode":"none","input":[{"name":"src","type":"BackboneElement","mode":"source"},{"name":"practitionerRole","type":"PractitionerRole","mode":"target"},{"name":"ext","type":"Extension","mode":"target"}],"rule":[{"name":"url","source":[{"context":"src"}],"target":[{"context":"ext","contextType":"variable","element":"url","transform":"copy","parameter":[{"valueString":"http://fhir.ch/ig/ch-orf/StructureDefinition/ch-orf-urgentnoficationcontactfortheresponsetothisdocument"}]}]},{"name":"practitionerRole","source":[{"context":"src"}],"target":[{"context":"ext","contextType":"variable","element":"value","variable":"reference","transform":"create","parameter":[{"valueString":"Reference"}]},{"context":"reference","contextType":"variable","element":"reference","transform":"evaluate","parameter":[{"valueString":"'urn:uuid:' + %practitionerRole.id"}]}]}]},{"name":"ReceiverPractitionerItems","typeMode":"none","input":[{"name":"src","type":"BackboneElement","mode":"source"},{"name":"practitioner","type":"Practitioner","mode":"target"}],"rule":[{"name":"item","source":[{"context":"src","element":"item","variable":"item","condition":"((linkId.value = 'receiver.practitioner.familyName') and answer.exists())"}],"target":[{"context":"practitioner","contextType":"variable","element":"name","variable":"name","listMode":["share"],"listRuleId":"practitionerName"},{"context":"name","contextType":"variable","element":"family","transform":"evaluate","parameter":[{"valueString":"item.answer.value"}]}]},{"name":"item","source":[{"context":"src","element":"item","variable":"item","condition":"((linkId.value = 'receiver.practitioner.givenName') and answer.exists())"}],"target":[{"context":"practitioner","contextType":"variable","element":"name","variable":"name","listMode":["share"],"listRuleId":"practitionerName"},{"context":"name","contextType":"variable","element":"given","transform":"evaluate","parameter":[{"valueString":"item.answer.value"}]}]},{"name":"receiver.practitioner.title","source":[{"context":"src","element":"item","variable":"item","condition":"((linkId.value = 'receiver.practitioner.title') and answer.exists())"}],"target":[{"context":"practitioner","contextType":"variable","element":"name","variable":"name","listMode":["share"],"listRuleId":"practitionerName"},{"context":"name","contextType":"variable","element":"prefix","variable":"prefix","transform":"evaluate","parameter":[{"valueString":"item.answer.value"}]},{"context":"prefix","contextType":"variable","element":"extension","variable":"ext"},{"context":"ext","contextType":"variable","element":"url","transform":"copy","parameter":[{"valueString":"http://hl7.org/fhir/StructureDefinition/iso21090-EN-qualifier"}]},{"context":"ext","contextType":"variable","element":"value","variable":"value","transform":"create","parameter":[{"valueString":"code"}]},{"context":"value","contextType":"variable","element":"value","transform":"copy","parameter":[{"valueString":"AC"}]}]},{"name":"receiver.practitioner.gln","source":[{"context":"src","element":"item","variable":"item","condition":"((linkId.value = 'receiver.practitioner.gln') and answer.exists())"}],"target":[{"context":"practitioner","contextType":"variable","element":"identifier","variable":"value"},{"context":"value","contextType":"variable","element":"system","transform":"copy","parameter":[{"valueString":"urn:oid:2.51.1.3"}]},{"context":"value","contextType":"variable","element":"value","transform":"evaluate","parameter":[{"valueString":"item.answer.value"}]}]},{"name":"receiver.practitioner.zsr","source":[{"context":"src","element":"item","variable":"item","condition":"((linkId.value = 'receiver.practitioner.zsr') and answer.exists())"}],"target":[{"context":"practitioner","contextType":"variable","element":"identifier","variable":"value"},{"context":"value","contextType":"variable","element":"system","transform":"copy","parameter":[{"valueString":"urn:oid:2.16.756.5.30.1.123.100.2.1.1"}]},{"context":"value","contextType":"variable","element":"value","transform":"evaluate","parameter":[{"valueString":"item.answer.value"}]}]},{"name":"receiver.practitioner.phone","source":[{"context":"src","element":"item","variable":"item","condition":"((linkId.value = 'receiver.practitioner.phone') and answer.exists())"}],"target":[{"context":"practitioner","contextType":"variable","element":"telecom","variable":"value"},{"context":"value","contextType":"variable","element":"system","transform":"copy","parameter":[{"valueString":"phone"}]},{"context":"value","contextType":"variable","element":"value","transform":"evaluate","parameter":[{"valueString":"item.answer.value"}]}]},{"name":"receiver.practitioner.email","source":[{"context":"src","element":"item","variable":"item","condition":"((linkId.value = 'receiver.practitioner.email') and answer.exists())"}],"target":[{"context":"practitioner","contextType":"variable","element":"telecom","variable":"value"},{"context":"value","contextType":"variable","element":"system","transform":"copy","parameter":[{"valueString":"email"}]},{"context":"value","contextType":"variable","element":"value","transform":"evaluate","parameter":[{"valueString":"item.answer.value"}]}]}]},{"name":"ReceiverOrganizationItems","typeMode":"none","input":[{"name":"src","type":"BackboneElement","mode":"source"},{"name":"organization","type":"Organization","mode":"target"}],"rule":[{"name":"item","source":[{"context":"src","element":"item","variable":"item","condition":"((linkId.value = 'receiver.organization.name') and answer.exists())"}],"target":[{"context":"organization","contextType":"variable","element":"name","transform":"evaluate","parameter":[{"valueString":"item.answer.value"}]}]},{"name":"receiver.organization.gln","source":[{"context":"src","element":"item","variable":"item","condition":"((linkId.value = 'receiver.organization.gln') and answer.exists())"}],"target":[{"context":"organization","contextType":"variable","element":"identifier","variable":"value"},{"context":"value","contextType":"variable","element":"system","transform":"copy","parameter":[{"valueString":"urn:oid:2.51.1.3"}]},{"context":"value","contextType":"variable","element":"value","transform":"evaluate","parameter":[{"valueString":"item.answer.value"}]}]},{"name":"receiver.organization.zsr","source":[{"context":"src","element":"item","variable":"item","condition":"((linkId.value = 'receiver.organization.zsr') and answer.exists())"}],"target":[{"context":"organization","contextType":"variable","element":"identifier","variable":"value"},{"context":"value","contextType":"variable","element":"system","transform":"copy","parameter":[{"valueString":"urn:oid:2.16.756.5.30.1.123.100.2.1.1"}]},{"context":"value","contextType":"variable","element":"value","transform":"evaluate","parameter":[{"valueString":"item.answer.value"}]}]},{"name":"item.answer","source":[{"context":"src","element":"item","variable":"item","condition":"((linkId.value = 'receiver.organization.streetAddressLine') and answer.exists())"}],"target":[{"context":"organization","contextType":"variable","element":"address","variable":"address","listMode":["share"],"listRuleId":"orgAddress"}],"rule":[{"name":"receiver.organization.streetAddressLine","source":[{"context":"item","element":"answer","variable":"answer"}],"target":[{"context":"address","contextType":"variable","element":"line","transform":"evaluate","parameter":[{"valueString":"answer.value"}]}]}]},{"name":"receiver.organization.postalCode","source":[{"context":"src","element":"item","variable":"item","condition":"((linkId.value = 'receiver.organization.postalCode') and answer.exists())"}],"target":[{"context":"organization","contextType":"variable","element":"address","variable":"address","listMode":["share"],"listRuleId":"orgAddress"},{"context":"address","contextType":"variable","element":"postalCode","transform":"evaluate","parameter":[{"valueString":"item.answer.value"}]}]},{"name":"receiver.organization.city","source":[{"context":"src","element":"item","variable":"item","condition":"((linkId.value = 'receiver.organization.city') and answer.exists())"}],"target":[{"context":"organization","contextType":"variable","element":"address","variable":"address","listMode":["share"],"listRuleId":"orgAddress"},{"context":"address","contextType":"variable","element":"city","transform":"evaluate","parameter":[{"valueString":"item.answer.value"}]}]},{"name":"receiver.organization.country","source":[{"context":"src","element":"item","variable":"item","condition":"((linkId.value = 'receiver.organization.country') and answer.exists())"}],"target":[{"context":"organization","contextType":"variable","element":"address","variable":"address","listMode":["share"],"listRuleId":"orgAddress"},{"context":"address","contextType":"variable","element":"country","transform":"evaluate","parameter":[{"valueString":"item.answer.value"}]}]}]},{"name":"ReceiverItems","typeMode":"none","input":[{"name":"src","type":"BackboneElement","mode":"source"},{"name":"bundle","type":"Bundle","mode":"target"},{"name":"practitionerRole","type":"practitionerRole","mode":"target"}],"rule":[{"name":"item","source":[{"context":"src","element":"item","variable":"item","condition":"(linkId.value = 'receiver.practitioner')"}],"target":[{"context":"bundle","contextType":"variable","element":"entry","variable":"e2"},{"context":"e2","contextType":"variable","element":"resource","variable":"practitioner","transform":"create","parameter":[{"valueString":"Practitioner"}]},{"context":"practitioner","contextType":"variable","element":"id","variable":"uuid2","transform":"uuid"},{"context":"practitionerRole","contextType":"variable","element":"practitioner","variable":"reference","transform":"create","parameter":[{"valueString":"Reference"}]},{"context":"reference","contextType":"variable","element":"reference","transform":"append","parameter":[{"valueString":"urn:uuid:"},{"valueId":"uuid2"}]},{"context":"e2","contextType":"variable","element":"fullUrl","transform":"append","parameter":[{"valueString":"urn:uuid:"},{"valueId":"uuid2"}]}],"dependent":[{"name":"ReceiverPractitionerItems","variable":["item","practitioner"]}]},{"name":"item","source":[{"context":"src","element":"item","variable":"item","condition":"(linkId.value = 'receiver.organization')"}],"target":[{"context":"bundle","contextType":"variable","element":"entry","variable":"e3"},{"context":"e3","contextType":"variable","element":"resource","variable":"organization","transform":"create","parameter":[{"valueString":"Organization"}]},{"context":"organization","contextType":"variable","element":"id","variable":"uuid3","transform":"uuid"},{"context":"practitionerRole","contextType":"variable","element":"organization","variable":"reference","transform":"create","parameter":[{"valueString":"Reference"}]},{"context":"reference","contextType":"variable","element":"reference","transform":"append","parameter":[{"valueString":"urn:uuid:"},{"valueId":"uuid3"}]},{"context":"e3","contextType":"variable","element":"fullUrl","transform":"append","parameter":[{"valueString":"urn:uuid:"},{"valueId":"uuid3"}]}],"dependent":[{"name":"ReceiverOrganizationItems","variable":["item","organization"]}]}]},{"name":"ReceiverInit","typeMode":"none","input":[{"name":"src","type":"BackboneElement","mode":"source"},{"name":"bundle","type":"Bundle","mode":"target"},{"name":"composition","type":"Composition","mode":"target"},{"name":"serviceRequest","type":"ServiceRequest","mode":"target"}],"rule":[{"name":"receiver","source":[{"context":"src"}],"target":[{"context":"bundle","contextType":"variable","element":"entry","variable":"e"},{"context":"e","contextType":"variable","element":"resource","variable":"practitionerRole","transform":"create","parameter":[{"valueString":"PractitionerRole"}]},{"context":"practitionerRole","contextType":"variable","element":"id","variable":"uuid","transform":"uuid"},{"context":"e","contextType":"variable","element":"fullUrl","transform":"append","parameter":[{"valueString":"urn:uuid:"},{"valueId":"uuid"}]},{"context":"composition","contextType":"variable","element":"extension","variable":"ext"},{"context":"ext","contextType":"variable","element":"url","transform":"copy","parameter":[{"valueString":"http://fhir.ch/ig/ch-orf/StructureDefinition/ch-orf-receiver"}]},{"context":"ext","contextType":"variable","element":"value","variable":"reference","transform":"create","parameter":[{"valueString":"Reference"}]},{"context":"reference","contextType":"variable","element":"reference","transform":"append","parameter":[{"valueString":"urn:uuid:"},{"valueId":"uuid"}]}],"dependent":[{"name":"ReceiverItems","variable":["src","bundle","practitionerRole"]}]}]},{"name":"PatientItems","typeMode":"none","input":[{"name":"src","type":"BackboneElement","mode":"source"},{"name":"tgt","type":"Patient","mode":"target"}],"rule":[{"name":"item","source":[{"context":"src","element":"item","variable":"item"}],"dependent":[{"name":"PatientItems","variable":["item","tgt"]}]},{"name":"item","source":[{"context":"src","element":"item","variable":"item","condition":"((linkId.value = 'patient.familyName') and answer.exists())"}],"target":[{"context":"tgt","contextType":"variable","element":"name","variable":"name","listMode":["share"],"listRuleId":"patientName"},{"context":"name","contextType":"variable","element":"family","transform":"evaluate","parameter":[{"valueString":"item.answer.value"}]}]},{"name":"item","source":[{"context":"src","element":"item","variable":"item","condition":"((linkId.value = 'patient.maidenName') and answer.exists())"}],"target":[{"context":"tgt","contextType":"variable","element":"name","variable":"name"},{"context":"name","contextType":"variable","element":"use","transform":"copy","parameter":[{"valueString":"maiden"}]},{"context":"name","contextType":"variable","element":"family","transform":"evaluate","parameter":[{"valueString":"item.answer.value"}]}]},{"name":"item","source":[{"context":"src","element":"item","variable":"item","condition":"((linkId.value = 'patient.givenName') and answer.exists())"}],"target":[{"context":"tgt","contextType":"variable","element":"name","variable":"name","listMode":["share"],"listRuleId":"patientName"},{"context":"name","contextType":"variable","element":"given","transform":"evaluate","parameter":[{"valueString":"item.answer.value"}]}]},{"name":"patient.localPid","source":[{"context":"src","element":"item","variable":"item","condition":"((linkId.value = 'patient.localPid') and answer.exists())"}],"target":[{"context":"tgt","contextType":"variable","element":"identifier","variable":"value","listMode":["share"],"listRuleId":"localpid"},{"context":"value","contextType":"variable","element":"type","variable":"type"},{"context":"type","contextType":"variable","element":"coding","variable":"coding"},{"context":"coding","contextType":"variable","element":"system","transform":"copy","parameter":[{"valueString":"http://terminology.hl7.org/CodeSystem/v2-0203"}]},{"context":"coding","contextType":"variable","element":"code","transform":"copy","parameter":[{"valueString":"MR"}]},{"context":"value","contextType":"variable","element":"value","transform":"evaluate","parameter":[{"valueString":"item.answer.valueString"}]}]},{"name":"patient.localPidDomain","source":[{"context":"src","element":"item","variable":"item","condition":"((linkId.value = 'patient.localPidDomain') and answer.exists())"}],"target":[{"context":"tgt","contextType":"variable","element":"identifier","variable":"value","listMode":["share"],"listRuleId":"localpid"},{"context":"value","contextType":"variable","element":"system","transform":"evaluate","parameter":[{"valueString":"item.answer.valueString"}]}]},{"name":"item","source":[{"context":"src","element":"item","variable":"item","condition":"((linkId.value = 'patient.birthDate') and answer.exists())"}],"target":[{"context":"tgt","contextType":"variable","element":"birthDate","transform":"evaluate","parameter":[{"valueString":"item.answer.value"}]}]},{"name":"item","source":[{"context":"src","element":"item","variable":"item","condition":"((linkId.value = 'patient.gender') and answer.exists())"}],"target":[{"context":"tgt","contextType":"variable","element":"gender","transform":"evaluate","parameter":[{"valueString":"item.answer.value.code"}]}]},{"name":"patient.maritalStatus","source":[{"context":"src","element":"item","variable":"item","condition":"((linkId.value = 'patient.maritalStatus') and answer.exists())"}],"rule":[{"name":"answer","source":[{"context":"item","element":"answer","variable":"answer"}],"rule":[{"name":"maritalStatus","source":[{"context":"answer","type":"Coding","element":"value","variable":"coding"}],"target":[{"context":"tgt","contextType":"variable","element":"maritalStatus","variable":"maritalStatus"},{"context":"maritalStatus","contextType":"variable","element":"coding","transform":"copy","parameter":[{"valueId":"coding"}]}]}]}]},{"name":"patient.phone","source":[{"context":"src","element":"item","variable":"item","condition":"((linkId.value = 'patient.phone') and answer.exists())"}],"rule":[{"name":"patient.phone","source":[{"context":"item","element":"answer","variable":"answer"}],"target":[{"context":"tgt","contextType":"variable","element":"telecom","variable":"value"},{"context":"value","contextType":"variable","element":"system","transform":"copy","parameter":[{"valueString":"phone"}]},{"context":"value","contextType":"variable","element":"value","transform":"evaluate","parameter":[{"valueString":"answer.value"}]}]}]},{"name":"patient.email","source":[{"context":"src","element":"item","variable":"item","condition":"((linkId.value = 'patient.email') and answer.exists())"}],"target":[{"context":"tgt","contextType":"variable","element":"telecom","variable":"value"},{"context":"value","contextType":"variable","element":"system","transform":"copy","parameter":[{"valueString":"email"}]},{"context":"value","contextType":"variable","element":"value","transform":"evaluate","parameter":[{"valueString":"item.answer.value"}]}]},{"name":"item.answer","source":[{"context":"src","element":"item","variable":"item","condition":"((linkId.value = 'patient.streetAddressLine') and answer.exists())"}],"target":[{"context":"tgt","contextType":"variable","element":"address","variable":"address","listMode":["share"],"listRuleId":"orgAddress"}],"rule":[{"name":"patient.streetAddressLine","source":[{"context":"item","element":"answer","variable":"answer"}],"target":[{"context":"address","contextType":"variable","element":"line","transform":"evaluate","parameter":[{"valueString":"answer.value"}]}]}]},{"name":"patient.postalCode","source":[{"context":"src","element":"item","variable":"item","condition":"((linkId.value = 'patient.postalCode') and answer.exists())"}],"target":[{"context":"tgt","contextType":"variable","element":"address","variable":"address","listMode":["share"],"listRuleId":"orgAddress"},{"context":"address","contextType":"variable","element":"postalCode","transform":"evaluate","parameter":[{"valueString":"item.answer.value"}]}]},{"name":"patient.city","source":[{"context":"src","element":"item","variable":"item","condition":"((linkId.value = 'patient.city') and answer.exists())"}],"target":[{"context":"tgt","contextType":"variable","element":"address","variable":"address","listMode":["share"],"listRuleId":"orgAddress"},{"context":"address","contextType":"variable","element":"city","transform":"evaluate","parameter":[{"valueString":"item.answer.value"}]}]},{"name":"patient.country","source":[{"context":"src","element":"item","variable":"item","condition":"((linkId.value = 'patient.country') and answer.exists())"}],"target":[{"context":"tgt","contextType":"variable","element":"address","variable":"address","listMode":["share"],"listRuleId":"orgAddress"},{"context":"address","contextType":"variable","element":"country","transform":"evaluate","parameter":[{"valueString":"item.answer.value"}]}]},{"name":"patient.languageOfCorrespondance","source":[{"context":"src","element":"item","variable":"item","condition":"((linkId.value = 'patient.languageOfCorrespondance') and answer.exists())"}],"rule":[{"name":"answer","source":[{"context":"item","element":"answer","variable":"answer"}],"rule":[{"name":"languageOfCorrespondance","source":[{"context":"answer","type":"Coding","element":"value","variable":"coding"}],"target":[{"context":"tgt","contextType":"variable","element":"communication","variable":"communication"},{"context":"communication","contextType":"variable","element":"preferred","transform":"copy","parameter":[{"valueBoolean":true}]},{"context":"communication","contextType":"variable","element":"language","variable":"language"},{"context":"language","contextType":"variable","element":"coding","transform":"copy","parameter":[{"valueId":"coding"}]}]}]}]},{"name":"contact","source":[{"context":"src","element":"item","variable":"item","condition":"(linkId.value = 'patient.contactperson')"}],"target":[{"context":"tgt","contextType":"variable","element":"contact","variable":"contact"}],"rule":[{"name":"item","source":[{"context":"item","element":"item","variable":"item","condition":"((linkId.value = 'patient.contactperson.familyName') and answer.exists())"}],"target":[{"context":"contact","contextType":"variable","element":"name","variable":"name","listMode":["share"],"listRuleId":"contactName"},{"context":"name","contextType":"variable","element":"family","transform":"evaluate","parameter":[{"valueString":"item.answer.value"}]}]},{"name":"item","source":[{"context":"item","element":"item","variable":"item","condition":"((linkId.value = 'patient.contactperson.givenName') and answer.exists())"}],"target":[{"context":"contact","contextType":"variable","element":"name","variable":"name","listMode":["share"],"listRuleId":"contactName"},{"context":"name","contextType":"variable","element":"given","transform":"evaluate","parameter":[{"valueString":"item.answer.value"}]}]},{"name":"patient.contactperson.phone","source":[{"context":"src","element":"item","variable":"item","condition":"((linkId.value = 'patient.contactperson.phone') and answer.exists())"}],"rule":[{"name":"patient.phone","source":[{"context":"item","element":"answer","variable":"answer"}],"target":[{"context":"tgt","contextType":"variable","element":"telecom","variable":"value"},{"context":"value","contextType":"variable","element":"system","transform":"copy","parameter":[{"valueString":"phone"}]},{"context":"value","contextType":"variable","element":"value","transform":"evaluate","parameter":[{"valueString":"answer.value"}]}]}]},{"name":"patient.email","source":[{"context":"item","element":"item","variable":"item","condition":"((linkId.value = 'patient.contactperson.email') and answer.exists())"}],"target":[{"context":"contact","contextType":"variable","element":"telecom","variable":"value"},{"context":"value","contextType":"variable","element":"system","transform":"copy","parameter":[{"valueString":"email"}]},{"context":"value","contextType":"variable","element":"value","transform":"evaluate","parameter":[{"valueString":"item.answer.value"}]}]},{"name":"patient.contactperson.relationship","source":[{"context":"item","element":"item","variable":"item","condition":"((linkId.value = 'patient.contactperson.relationship') and answer.exists())"}],"target":[{"context":"contact","contextType":"variable","element":"relationship","variable":"relationship"},{"context":"relationship","contextType":"variable","element":"text","transform":"evaluate","parameter":[{"valueString":"item.answer.value"}]}]}]}]},{"name":"RequestedEncounterItems","typeMode":"none","input":[{"name":"src","type":"BackboneElement","mode":"source"},{"name":"bundle","type":"Bundle","mode":"target"},{"name":"patient","type":"Patient","mode":"target"},{"name":"serviceRequest","type":"ServiceRequest","mode":"target"}],"rule":[{"name":"RequestedEncounterItems","source":[{"context":"src"}],"target":[{"context":"bundle","contextType":"variable","element":"entry","variable":"e4"},{"context":"e4","contextType":"variable","element":"resource","variable":"encounter","transform":"create","parameter":[{"valueString":"Encounter"}]},{"context":"encounter","contextType":"variable","element":"id","variable":"uuid4","transform":"uuid"},{"context":"e4","contextType":"variable","element":"fullUrl","transform":"evaluate","parameter":[{"valueString":"'urn:uuid:' + %uuid4"}]},{"context":"encounter","contextType":"variable","element":"status","transform":"copy","parameter":[{"valueString":"planned"}]},{"context":"serviceRequest","contextType":"variable","element":"extension","variable":"extension"},{"context":"encounter","contextType":"variable","element":"subject","variable":"subject","transform":"create","parameter":[{"valueString":"Reference"}]},{"context":"subject","contextType":"variable","element":"reference","transform":"evaluate","parameter":[{"valueString":"'urn:uuid:' + %patient.id"}]},{"context":"extension","contextType":"variable","element":"url","transform":"copy","parameter":[{"valueString":"http://fhir.ch/ig/ch-orf/StructureDefinition/ch-orf-requestedencounterdetails"}]},{"context":"extension","contextType":"variable","element":"value","variable":"reference","transform":"create","parameter":[{"valueString":"Reference"}]},{"context":"reference","contextType":"variable","element":"reference","transform":"evaluate","parameter":[{"valueString":"'urn:uuid:' + %uuid4"}]}],"rule":[{"name":"requestedEncounter.class","source":[{"context":"src","element":"item","variable":"item","condition":"((linkId.value = 'requestedEncounter.class') and answer.exists())"}],"target":[{"context":"encounter","contextType":"variable","element":"class","transform":"evaluate","parameter":[{"valueString":"item.answer.value"}]}]},{"name":"requestedEncounter.desiredAccommodation","source":[{"context":"src","element":"item","variable":"item","condition":"((linkId.value = 'requestedEncounter.desiredAccommodation') and answer.exists())"}],"target":[{"context":"encounter","contextType":"variable","element":"extension","variable":"extension"},{"context":"extension","contextType":"variable","element":"url","transform":"copy","parameter":[{"valueString":"http://fhir.ch/ig/ch-orf/StructureDefinition/ch-orf-desiredaccommodation"}]},{"context":"extension","contextType":"variable","element":"value","transform":"evaluate","parameter":[{"valueString":"item.answer.value"}]}]}]}]},{"name":"Coverage","typeMode":"none","input":[{"name":"src","type":"BackboneElement","mode":"source"},{"name":"bundle","type":"Bundle","mode":"target"},{"name":"patient","type":"Patient","mode":"target"},{"name":"serviceRequest","type":"ServiceRequest","mode":"target"}],"rule":[{"name":"coverage.beneficiary","source":[{"context":"src","element":"item","variable":"item","condition":"where(linkId.value = 'coverage.beneficiary')"}],"rule":[{"name":"coverage.beneficiary.ahvn13","source":[{"context":"item","element":"item","variable":"item","condition":"((linkId.value = 'coverage.beneficiary.ahvn13') and answer.exists())"}],"target":[{"context":"patient","contextType":"variable","element":"identifier","variable":"identifier"},{"context":"identifier","contextType":"variable","element":"system","transform":"copy","parameter":[{"valueString":"urn:oid:2.16.756.5.32"}]},{"context":"identifier","contextType":"variable","element":"value","transform":"evaluate","parameter":[{"valueString":"item.answer.value"}]}]}],"documentation":"coverage.beneficiary"},{"name":"coveragekvg","source":[{"context":"src","element":"item","variable":"item","condition":"where(linkId.value = 'coverage.kvg')"}],"target":[{"context":"bundle","contextType":"variable","element":"entry","variable":"e4"},{"context":"e4","contextType":"variable","element":"resource","variable":"coverage","transform":"create","parameter":[{"valueString":"Coverage"}]},{"context":"coverage","contextType":"variable","element":"id","variable":"uuid4","transform":"uuid"},{"context":"e4","contextType":"variable","element":"fullUrl","transform":"evaluate","parameter":[{"valueString":"'urn:uuid:' + %uuid4"}]},{"context":"serviceRequest","contextType":"variable","element":"insurance","variable":"insurance"},{"context":"insurance","contextType":"variable","element":"reference","transform":"evaluate","parameter":[{"valueString":"'urn:uuid:' + %uuid4"}]},{"context":"coverage","contextType":"variable","element":"status","transform":"copy","parameter":[{"valueString":"active"}]},{"context":"coverage","contextType":"variable","element":"beneficiary","variable":"subject","transform":"create","parameter":[{"valueString":"Reference"}]},{"context":"subject","contextType":"variable","element":"reference","transform":"evaluate","parameter":[{"valueString":"'urn:uuid:' + %patient.id"}]},{"context":"coverage","contextType":"variable","element":"type","variable":"type"},{"context":"type","contextType":"variable","element":"coding","variable":"coding"},{"context":"coding","contextType":"variable","element":"system","transform":"copy","parameter":[{"valueString":"http://fhir.ch/ig/ch-orf/CodeSystem/ch-orf-cs-coveragetype"}]},{"context":"coding","contextType":"variable","element":"code","transform":"copy","parameter":[{"valueString":"KVG"}]}],"rule":[{"name":"coverage.kvg.name","source":[{"context":"item","element":"item","variable":"item","condition":"((linkId.value = 'coverage.kvg.name') and answer.exists())"}],"target":[{"context":"coverage","contextType":"variable","element":"payor","variable":"payor"},{"context":"payor","contextType":"variable","element":"reference","variable":"refcontained"},{"context":"refcontained","contextType":"variable","element":"value","transform":"copy","parameter":[{"valueString":"#org"}]},{"context":"coverage","contextType":"variable","element":"contained","variable":"organization","transform":"create","parameter":[{"valueString":"Organization"}]},{"context":"organization","contextType":"variable","element":"id","transform":"copy","parameter":[{"valueString":"org"}]},{"context":"organization","contextType":"variable","element":"name","transform":"evaluate","parameter":[{"valueString":"item.answer.value"}]}]},{"name":"coverage.kvg.insuranceCardNumber","source":[{"context":"item","element":"item","variable":"item","condition":"((linkId.value = 'coverage.kvg.insuranceCardNumber') and answer.exists())"}],"target":[{"context":"coverage","contextType":"variable","element":"identifier","variable":"identifier"},{"context":"identifier","contextType":"variable","element":"type","variable":"typeid"},{"context":"typeid","contextType":"variable","element":"coding","variable":"coding"},{"context":"coding","contextType":"variable","element":"system","transform":"copy","parameter":[{"valueString":"http://fhir.ch/ig/ch-orf/CodeSystem/ch-orf-cs-coverageidentifiertype"}]},{"context":"coding","contextType":"variable","element":"code","transform":"copy","parameter":[{"valueString":"VeKa"}]},{"context":"identifier","contextType":"variable","element":"value","transform":"evaluate","parameter":[{"valueString":"item.answer.value"}]}]}],"documentation":"coverage.kvg"},{"name":"coverageuvg","source":[{"context":"src","element":"item","variable":"item","condition":"where(linkId.value = 'coverage.uvg')"}],"target":[{"context":"bundle","contextType":"variable","element":"entry","variable":"e4"},{"context":"e4","contextType":"variable","element":"resource","variable":"coverage","transform":"create","parameter":[{"valueString":"Coverage"}]},{"context":"coverage","contextType":"variable","element":"id","variable":"uuid4","transform":"uuid"},{"context":"e4","contextType":"variable","element":"fullUrl","transform":"evaluate","parameter":[{"valueString":"'urn:uuid:' + %uuid4"}]},{"context":"serviceRequest","contextType":"variable","element":"insurance","variable":"insurance"},{"context":"insurance","contextType":"variable","element":"reference","transform":"evaluate","parameter":[{"valueString":"'urn:uuid:' + %uuid4"}]},{"context":"coverage","contextType":"variable","element":"status","transform":"copy","parameter":[{"valueString":"active"}]},{"context":"coverage","contextType":"variable","element":"beneficiary","variable":"subject","transform":"create","parameter":[{"valueString":"Reference"}]},{"context":"subject","contextType":"variable","element":"reference","transform":"evaluate","parameter":[{"valueString":"'urn:uuid:' + %patient.id"}]},{"context":"coverage","contextType":"variable","element":"type","variable":"type"},{"context":"type","contextType":"variable","element":"coding","variable":"coding"},{"context":"coding","contextType":"variable","element":"system","transform":"copy","parameter":[{"valueString":"http://fhir.ch/ig/ch-orf/CodeSystem/ch-orf-cs-coveragetype"}]},{"context":"coding","contextType":"variable","element":"code","transform":"copy","parameter":[{"valueString":"UVG"}]}],"rule":[{"name":"coverage.uvg.name","source":[{"context":"item","element":"item","variable":"item","condition":"((linkId.value = 'coverage.uvg.name') and answer.exists())"}],"target":[{"context":"coverage","contextType":"variable","element":"payor","variable":"payor"},{"context":"payor","contextType":"variable","element":"reference","variable":"refcontained"},{"context":"refcontained","contextType":"variable","element":"value","transform":"copy","parameter":[{"valueString":"#org"}]},{"context":"coverage","contextType":"variable","element":"contained","variable":"organization","transform":"create","parameter":[{"valueString":"Organization"}]},{"context":"organization","contextType":"variable","element":"id","transform":"copy","parameter":[{"valueString":"org"}]},{"context":"organization","contextType":"variable","element":"name","transform":"evaluate","parameter":[{"valueString":"item.answer.value"}]}]},{"name":"coverage.uvg.claimNumber","source":[{"context":"item","element":"item","variable":"item","condition":"((linkId.value = 'coverage.uvg.claimNumber') and answer.exists())"}],"target":[{"context":"coverage","contextType":"variable","element":"identifier","variable":"identifier"},{"context":"identifier","contextType":"variable","element":"type","variable":"typeid"},{"context":"typeid","contextType":"variable","element":"coding","variable":"coding"},{"context":"coding","contextType":"variable","element":"system","transform":"copy","parameter":[{"valueString":"http://fhir.ch/ig/ch-orf/CodeSystem/ch-orf-cs-coverageidentifiertype"}]},{"context":"coding","contextType":"variable","element":"code","transform":"copy","parameter":[{"valueString":"Claim"}]},{"context":"identifier","contextType":"variable","element":"value","transform":"evaluate","parameter":[{"valueString":"item.answer.value"}]}]}],"documentation":"coverage.uvg\tUnfallversicherung (nach UVG)\t0..1\tgroup\t\tDefinition: Coverage.type"},{"name":"coveragevvg","source":[{"context":"src","element":"item","variable":"item","condition":"where(linkId.value = 'coverage.vvg')"}],"target":[{"context":"bundle","contextType":"variable","element":"entry","variable":"e4"},{"context":"e4","contextType":"variable","element":"resource","variable":"coverage","transform":"create","parameter":[{"valueString":"Coverage"}]},{"context":"coverage","contextType":"variable","element":"id","variable":"uuid4","transform":"uuid"},{"context":"e4","contextType":"variable","element":"fullUrl","transform":"evaluate","parameter":[{"valueString":"'urn:uuid:' + %uuid4"}]},{"context":"serviceRequest","contextType":"variable","element":"insurance","variable":"insurance"},{"context":"insurance","contextType":"variable","element":"reference","transform":"evaluate","parameter":[{"valueString":"'urn:uuid:' + %uuid4"}]},{"context":"coverage","contextType":"variable","element":"status","transform":"copy","parameter":[{"valueString":"active"}]},{"context":"coverage","contextType":"variable","element":"beneficiary","variable":"subject","transform":"create","parameter":[{"valueString":"Reference"}]},{"context":"subject","contextType":"variable","element":"reference","transform":"evaluate","parameter":[{"valueString":"'urn:uuid:' + %patient.id"}]},{"context":"coverage","contextType":"variable","element":"type","variable":"type"},{"context":"type","contextType":"variable","element":"coding","variable":"coding"},{"context":"coding","contextType":"variable","element":"system","transform":"copy","parameter":[{"valueString":"http://fhir.ch/ig/ch-orf/CodeSystem/ch-orf-cs-coveragetype"}]},{"context":"coding","contextType":"variable","element":"code","transform":"copy","parameter":[{"valueString":"VVG"}]}],"rule":[{"name":"coverage.vvg.name","source":[{"context":"item","element":"item","variable":"item","condition":"((linkId.value = 'coverage.vvg.name') and answer.exists())"}],"target":[{"context":"coverage","contextType":"variable","element":"payor","variable":"payor"},{"context":"payor","contextType":"variable","element":"reference","variable":"refcontained"},{"context":"refcontained","contextType":"variable","element":"value","transform":"copy","parameter":[{"valueString":"#org"}]},{"context":"coverage","contextType":"variable","element":"contained","variable":"organization","transform":"create","parameter":[{"valueString":"Organization"}]},{"context":"organization","contextType":"variable","element":"id","transform":"copy","parameter":[{"valueString":"org"}]},{"context":"organization","contextType":"variable","element":"name","transform":"evaluate","parameter":[{"valueString":"item.answer.value"}]}]},{"name":"coverage.vvg.insuranceCardNumber","source":[{"context":"item","element":"item","variable":"item","condition":"((linkId.value = 'coverage.vvg.insuranceCardNumber') and answer.exists())"}],"target":[{"context":"coverage","contextType":"variable","element":"identifier","variable":"identifier"},{"context":"identifier","contextType":"variable","element":"type","variable":"typeid"},{"context":"typeid","contextType":"variable","element":"coding","variable":"coding"},{"context":"coding","contextType":"variable","element":"system","transform":"copy","parameter":[{"valueString":"http://fhir.ch/ig/ch-orf/CodeSystem/ch-orf-cs-coverageidentifiertype"}]},{"context":"coding","contextType":"variable","element":"code","transform":"copy","parameter":[{"valueString":"VeKa"}]},{"context":"identifier","contextType":"variable","element":"value","transform":"evaluate","parameter":[{"valueString":"item.answer.value"}]}]}],"documentation":"coverage.vvg\tZusatzversicherung (nach VVG)\t0..1\tgroup\t\tDefinition: Coverage.type"},{"name":"coverageiv","source":[{"context":"src","element":"item","variable":"item","condition":"where(linkId.value = 'coverage.iv')"}],"target":[{"context":"bundle","contextType":"variable","element":"entry","variable":"e4"},{"context":"e4","contextType":"variable","element":"resource","variable":"coverage","transform":"create","parameter":[{"valueString":"Coverage"}]},{"context":"coverage","contextType":"variable","element":"id","variable":"uuid4","transform":"uuid"},{"context":"e4","contextType":"variable","element":"fullUrl","transform":"evaluate","parameter":[{"valueString":"'urn:uuid:' + %uuid4"}]},{"context":"serviceRequest","contextType":"variable","element":"insurance","variable":"insurance"},{"context":"insurance","contextType":"variable","element":"reference","transform":"evaluate","parameter":[{"valueString":"'urn:uuid:' + %uuid4"}]},{"context":"coverage","contextType":"variable","element":"status","transform":"copy","parameter":[{"valueString":"active"}]},{"context":"coverage","contextType":"variable","element":"beneficiary","variable":"subject","transform":"create","parameter":[{"valueString":"Reference"}]},{"context":"subject","contextType":"variable","element":"reference","transform":"evaluate","parameter":[{"valueString":"'urn:uuid:' + %patient.id"}]},{"context":"coverage","contextType":"variable","element":"type","variable":"type"},{"context":"type","contextType":"variable","element":"coding","variable":"coding"},{"context":"coding","contextType":"variable","element":"system","transform":"copy","parameter":[{"valueString":"http://fhir.ch/ig/ch-orf/CodeSystem/ch-orf-cs-coveragetype"}]},{"context":"coding","contextType":"variable","element":"code","transform":"copy","parameter":[{"valueString":"IVG"}]}],"rule":[{"name":"coverage.iv.verfuegungsnummer","source":[{"context":"item","element":"item","variable":"item","condition":"((linkId.value = 'coverage.iv.verfuegungsnummer') and answer.exists())"}],"target":[{"context":"coverage","contextType":"variable","element":"identifier","variable":"identifier"},{"context":"identifier","contextType":"variable","element":"type","variable":"typeid"},{"context":"typeid","contextType":"variable","element":"coding","variable":"coding"},{"context":"coding","contextType":"variable","element":"system","transform":"copy","parameter":[{"valueString":"http://fhir.ch/ig/ch-orf/CodeSystem/ch-orf-cs-coverageidentifiertype"}]},{"context":"coding","contextType":"variable","element":"code","transform":"copy","parameter":[{"valueString":"IV"}]},{"context":"identifier","contextType":"variable","element":"value","transform":"evaluate","parameter":[{"valueString":"item.answer.value"}]},{"context":"coverage","contextType":"variable","element":"payor","variable":"payor"},{"context":"payor","contextType":"variable","element":"reference","variable":"refcontained"},{"context":"refcontained","contextType":"variable","element":"value","transform":"copy","parameter":[{"valueString":"#org"}]},{"context":"coverage","contextType":"variable","element":"contained","variable":"organization","transform":"create","parameter":[{"valueString":"Organization"}]},{"context":"organization","contextType":"variable","element":"id","transform":"copy","parameter":[{"valueString":"org"}]},{"context":"organization","contextType":"variable","element":"name","transform":"copy","parameter":[{"valueString":"IV"}]}]}],"documentation":"coverage.iv\tInvalidenversicherung (IV)\t0..1\tgroup\t\tDefinition: Coverage.type"},{"name":"coveragemv","source":[{"context":"src","element":"item","variable":"item","condition":"where(linkId.value = 'coverage.mv')"}],"target":[{"context":"bundle","contextType":"variable","element":"entry","variable":"e4"},{"context":"e4","contextType":"variable","element":"resource","variable":"coverage","transform":"create","parameter":[{"valueString":"Coverage"}]},{"context":"coverage","contextType":"variable","element":"id","variable":"uuid4","transform":"uuid"},{"context":"e4","contextType":"variable","element":"fullUrl","transform":"evaluate","parameter":[{"valueString":"'urn:uuid:' + %uuid4"}]},{"context":"serviceRequest","contextType":"variable","element":"insurance","variable":"insurance"},{"context":"insurance","contextType":"variable","element":"reference","transform":"evaluate","parameter":[{"valueString":"'urn:uuid:' + %uuid4"}]},{"context":"coverage","contextType":"variable","element":"status","transform":"copy","parameter":[{"valueString":"active"}]},{"context":"coverage","contextType":"variable","element":"beneficiary","variable":"subject","transform":"create","parameter":[{"valueString":"Reference"}]},{"context":"subject","contextType":"variable","element":"reference","transform":"evaluate","parameter":[{"valueString":"'urn:uuid:' + %patient.id"}]},{"context":"coverage","contextType":"variable","element":"type","variable":"type"},{"context":"type","contextType":"variable","element":"coding","variable":"coding"},{"context":"coding","contextType":"variable","element":"system","transform":"copy","parameter":[{"valueString":"http://fhir.ch/ig/ch-orf/CodeSystem/ch-orf-cs-coveragetype"}]},{"context":"coding","contextType":"variable","element":"code","transform":"copy","parameter":[{"valueString":"MVG"}]}],"rule":[{"name":"coverage.mv.versichertennummer","source":[{"context":"item","element":"item","variable":"item","condition":"((linkId.value = 'coverage.mv.versichertennummer') and answer.exists())"}],"target":[{"context":"coverage","contextType":"variable","element":"identifier","variable":"identifier"},{"context":"identifier","contextType":"variable","element":"type","variable":"typeid"},{"context":"typeid","contextType":"variable","element":"coding","variable":"coding"},{"context":"coding","contextType":"variable","element":"system","transform":"copy","parameter":[{"valueString":"http://fhir.ch/ig/ch-orf/CodeSystem/ch-orf-cs-coverageidentifiertype"}]},{"context":"coding","contextType":"variable","element":"code","transform":"copy","parameter":[{"valueString":"MV"}]},{"context":"identifier","contextType":"variable","element":"value","transform":"evaluate","parameter":[{"valueString":"item.answer.value"}]},{"context":"coverage","contextType":"variable","element":"payor","variable":"payor"},{"context":"payor","contextType":"variable","element":"reference","variable":"refcontained"},{"context":"refcontained","contextType":"variable","element":"value","transform":"copy","parameter":[{"valueString":"#org"}]},{"context":"coverage","contextType":"variable","element":"contained","variable":"organization","transform":"create","parameter":[{"valueString":"Organization"}]},{"context":"organization","contextType":"variable","element":"id","transform":"copy","parameter":[{"valueString":"org"}]},{"context":"organization","contextType":"variable","element":"name","transform":"copy","parameter":[{"valueString":"MV"}]}]}],"documentation":"coverage.mv\tMilitärversicherung (MV)\t0..1\tgroup\t\tDefinition: Coverage.type"},{"name":"self","source":[{"context":"src","element":"item","variable":"item","condition":"where(linkId.value = 'coverage.self')"}],"rule":[{"name":"payor","source":[{"context":"item","element":"item","variable":"item","condition":"((linkId.value = 'coverage.self.patient') and answer.exists() and answer.value)"}],"target":[{"context":"bundle","contextType":"variable","element":"entry","variable":"e4"},{"context":"e4","contextType":"variable","element":"resource","variable":"coverage","transform":"create","parameter":[{"valueString":"Coverage"}]},{"context":"coverage","contextType":"variable","element":"id","variable":"uuid4","transform":"uuid"},{"context":"e4","contextType":"variable","element":"fullUrl","transform":"evaluate","parameter":[{"valueString":"'urn:uuid:' + %uuid4"}]},{"context":"serviceRequest","contextType":"variable","element":"insurance","variable":"insurance"},{"context":"insurance","contextType":"variable","element":"reference","transform":"evaluate","parameter":[{"valueString":"'urn:uuid:' + %uuid4"}]},{"context":"coverage","contextType":"variable","element":"status","transform":"copy","parameter":[{"valueString":"active"}]},{"context":"coverage","contextType":"variable","element":"beneficiary","variable":"subject","transform":"create","parameter":[{"valueString":"Reference"}]},{"context":"subject","contextType":"variable","element":"reference","transform":"evaluate","parameter":[{"valueString":"'urn:uuid:' + %patient.id"}]},{"context":"coverage","contextType":"variable","element":"type","variable":"type"},{"context":"type","contextType":"variable","element":"coding","variable":"coding"},{"context":"coding","contextType":"variable","element":"system","transform":"copy","parameter":[{"valueString":"http://fhir.ch/ig/ch-orf/CodeSystem/ch-orf-cs-coveragetype"}]},{"context":"coding","contextType":"variable","element":"code","transform":"copy","parameter":[{"valueString":"Self"}]},{"context":"coverage","contextType":"variable","element":"payor","variable":"subject"},{"context":"subject","contextType":"variable","element":"reference","transform":"evaluate","parameter":[{"valueString":"'urn:uuid:' + %patient.id"}]}]},{"name":"coverage.self.patientrelated.","source":[{"context":"item","element":"item","variable":"item2","condition":"((linkId.value = 'coverage.self.patientRelatedPerson') and answer.exists() and answer.value)"}],"rule":[{"name":"coverage.self.relatedPerson","source":[{"context":"item","element":"item","variable":"item","condition":"(linkId.value = 'coverage.self.relatedPerson')"}],"target":[{"context":"bundle","contextType":"variable","element":"entry","variable":"e5"},{"context":"e5","contextType":"variable","element":"resource","variable":"coverage","transform":"create","parameter":[{"valueString":"Coverage"}]},{"context":"coverage","contextType":"variable","element":"id","variable":"uuid4","transform":"uuid"},{"context":"e5","contextType":"variable","element":"fullUrl","transform":"evaluate","parameter":[{"valueString":"'urn:uuid:' + %uuid4"}]},{"context":"serviceRequest","contextType":"variable","element":"insurance","variable":"insurance"},{"context":"insurance","contextType":"variable","element":"reference","transform":"evaluate","parameter":[{"valueString":"'urn:uuid:' + %uuid4"}]},{"context":"coverage","contextType":"variable","element":"status","transform":"copy","parameter":[{"valueString":"active"}]},{"context":"coverage","contextType":"variable","element":"beneficiary","variable":"subject","transform":"create","parameter":[{"valueString":"Reference"}]},{"context":"subject","contextType":"variable","element":"reference","transform":"evaluate","parameter":[{"valueString":"'urn:uuid:' + %patient.id"}]},{"context":"coverage","contextType":"variable","element":"type","variable":"type"},{"context":"type","contextType":"variable","element":"coding","variable":"coding"},{"context":"coding","contextType":"variable","element":"system","transform":"copy","parameter":[{"valueString":"http://fhir.ch/ig/ch-orf/CodeSystem/ch-orf-cs-coveragetype"}]},{"context":"coding","contextType":"variable","element":"code","transform":"copy","parameter":[{"valueString":"Self"}]},{"context":"bundle","contextType":"variable","element":"entry","variable":"e6"},{"context":"e6","contextType":"variable","element":"resource","variable":"relatedPerson","transform":"create","parameter":[{"valueString":"RelatedPerson"}]},{"context":"relatedPerson","contextType":"variable","element":"id","variable":"uuid6","transform":"uuid"},{"context":"e6","contextType":"variable","element":"fullUrl","transform":"append","parameter":[{"valueString":"urn:uuid:"},{"valueId":"uuid6"}]},{"context":"coverage","contextType":"variable","element":"payor","variable":"subject"},{"context":"subject","contextType":"variable","element":"reference","transform":"evaluate","parameter":[{"valueString":"'urn:uuid:' + %relatedPerson.id"}]},{"context":"relatedPerson","contextType":"variable","element":"patient","variable":"reference"},{"context":"reference","contextType":"variable","element":"reference","transform":"evaluate","parameter":[{"valueString":"'urn:uuid:' + %patient.id"}]}],"dependent":[{"name":"CoverageRelatedPersonItems","variable":["item","relatedPerson"]}]}]}],"documentation":"coverage.self\tSelbstzahler\t0..1\tgroup\t\tDefinition: Coverage.type"},{"name":"coveragevvg","source":[{"context":"src","element":"item","variable":"item","condition":"where(linkId.value = 'coverage.other')"}],"target":[{"context":"bundle","contextType":"variable","element":"entry","variable":"e4"},{"context":"e4","contextType":"variable","element":"resource","variable":"coverage","transform":"create","parameter":[{"valueString":"Coverage"}]},{"context":"coverage","contextType":"variable","element":"id","variable":"uuid4","transform":"uuid"},{"context":"e4","contextType":"variable","element":"fullUrl","transform":"evaluate","parameter":[{"valueString":"'urn:uuid:' + %uuid4"}]},{"context":"serviceRequest","contextType":"variable","element":"insurance","variable":"insurance"},{"context":"insurance","contextType":"variable","element":"reference","transform":"evaluate","parameter":[{"valueString":"'urn:uuid:' + %uuid4"}]},{"context":"coverage","contextType":"variable","element":"status","transform":"copy","parameter":[{"valueString":"active"}]},{"context":"coverage","contextType":"variable","element":"beneficiary","variable":"subject","transform":"create","parameter":[{"valueString":"Reference"}]},{"context":"subject","contextType":"variable","element":"reference","transform":"evaluate","parameter":[{"valueString":"'urn:uuid:' + %patient.id"}]},{"context":"coverage","contextType":"variable","element":"type","variable":"type"},{"context":"type","contextType":"variable","element":"coding","variable":"coding"},{"context":"coding","contextType":"variable","element":"system","transform":"copy","parameter":[{"valueString":"http://fhir.ch/ig/ch-orf/CodeSystem/ch-orf-cs-coveragetype"}]},{"context":"coding","contextType":"variable","element":"code","transform":"copy","parameter":[{"valueString":"Other"}]}],"rule":[{"name":"coverage.other.name","source":[{"context":"item","element":"item","variable":"item","condition":"((linkId.value = 'coverage.other.name') and answer.exists())"}],"target":[{"context":"coverage","contextType":"variable","element":"payor","variable":"payor"},{"context":"payor","contextType":"variable","element":"reference","variable":"refcontained"},{"context":"refcontained","contextType":"variable","element":"value","transform":"copy","parameter":[{"valueString":"#org"}]},{"context":"coverage","contextType":"variable","element":"contained","variable":"organization","transform":"create","parameter":[{"valueString":"Organization"}]},{"context":"organization","contextType":"variable","element":"id","transform":"copy","parameter":[{"valueString":"org"}]},{"context":"organization","contextType":"variable","element":"name","transform":"evaluate","parameter":[{"valueString":"item.answer.value"}]}]},{"name":"coverage.other.id","source":[{"context":"item","element":"item","variable":"item","condition":"((linkId.value = 'coverage.other.id') and answer.exists())"}],"target":[{"context":"coverage","contextType":"variable","element":"identifier","variable":"identifier"},{"context":"identifier","contextType":"variable","element":"value","transform":"evaluate","parameter":[{"valueString":"item.answer.value"}]}]}],"documentation":"coverage.other\tAnderer Kostenträger\t0..1\tgroup\t\tDefinition: Coverage.type"}]},{"name":"CoverageRelatedPersonItems","typeMode":"none","input":[{"name":"src","type":"BackboneElement","mode":"source"},{"name":"relatedPerson","type":"RelatedPerson","mode":"target"}],"rule":[{"name":"item","source":[{"context":"src","element":"item","variable":"item","condition":"((linkId.value = 'coverage.self.relatedPerson.familyName') and answer.exists())"}],"target":[{"context":"relatedPerson","contextType":"variable","element":"name","variable":"name","listMode":["share"],"listRuleId":"name"},{"context":"name","contextType":"variable","element":"family","transform":"evaluate","parameter":[{"valueString":"item.answer.value"}]}]},{"name":"item","source":[{"context":"src","element":"item","variable":"item","condition":"((linkId.value = 'coverage.self.relatedPerson.givenName') and answer.exists())"}],"target":[{"context":"relatedPerson","contextType":"variable","element":"name","variable":"name","listMode":["share"],"listRuleId":"name"},{"context":"name","contextType":"variable","element":"given","transform":"evaluate","parameter":[{"valueString":"item.answer.value"}]}]},{"name":"phone","source":[{"context":"src","element":"item","variable":"item","condition":"((linkId.value = 'coverage.self.relatedPerson.phone') and answer.exists())"}],"rule":[{"name":"coverage.self.relatedPerson.phone","source":[{"context":"item","element":"answer","variable":"answer"}],"target":[{"context":"relatedPerson","contextType":"variable","element":"telecom","variable":"value"},{"context":"value","contextType":"variable","element":"system","transform":"copy","parameter":[{"valueString":"phone"}]},{"context":"value","contextType":"variable","element":"value","transform":"evaluate","parameter":[{"valueString":"answer.value"}]}]}]},{"name":"coverage.self.relatedPerson.email","source":[{"context":"src","element":"item","variable":"item","condition":"((linkId.value = 'coverage.self.relatedPerson.email') and answer.exists())"}],"target":[{"context":"relatedPerson","contextType":"variable","element":"telecom","variable":"value"},{"context":"value","contextType":"variable","element":"system","transform":"copy","parameter":[{"valueString":"email"}]},{"context":"value","contextType":"variable","element":"value","transform":"evaluate","parameter":[{"valueString":"item.answer.value"}]}]},{"name":"item.answer","source":[{"context":"src","element":"item","variable":"item","condition":"((linkId.value = 'coverage.self.relatedPerson.streetAddressLine') and answer.exists())"}],"target":[{"context":"relatedPerson","contextType":"variable","element":"address","variable":"address","listMode":["share"],"listRuleId":"orgAddress"}],"rule":[{"name":"coverage.self.relatedPerson.streetAddressLine","source":[{"context":"item","element":"answer","variable":"answer"}],"target":[{"context":"address","contextType":"variable","element":"line","transform":"evaluate","parameter":[{"valueString":"answer.value"}]}]}]},{"name":"coverage.self.relatedPerson.postalCode","source":[{"context":"src","element":"item","variable":"item","condition":"((linkId.value = 'coverage.self.relatedPerson.postalCode') and answer.exists())"}],"target":[{"context":"relatedPerson","contextType":"variable","element":"address","variable":"address","listMode":["share"],"listRuleId":"orgAddress"},{"context":"address","contextType":"variable","element":"postalCode","transform":"evaluate","parameter":[{"valueString":"item.answer.value"}]}]},{"name":"coverage.self.relatedPerson.city","source":[{"context":"src","element":"item","variable":"item","condition":"((linkId.value = 'coverage.self.relatedPerson.city') and answer.exists())"}],"target":[{"context":"relatedPerson","contextType":"variable","element":"address","variable":"address","listMode":["share"],"listRuleId":"orgAddress"},{"context":"address","contextType":"variable","element":"city","transform":"evaluate","parameter":[{"valueString":"item.answer.value"}]}]},{"name":"coverage.self.relatedPerson.country","source":[{"context":"src","element":"item","variable":"item","condition":"((linkId.value = 'coverage.self.relatedPerson.country') and answer.exists())"}],"target":[{"context":"relatedPerson","contextType":"variable","element":"address","variable":"address","listMode":["share"],"listRuleId":"orgAddress"},{"context":"address","contextType":"variable","element":"country","transform":"evaluate","parameter":[{"valueString":"item.answer.value"}]}]}]},{"name":"SenderAuthorPractitionerItems","typeMode":"none","input":[{"name":"src","type":"BackboneElement","mode":"source"},{"name":"practitioner","type":"Practitioner","mode":"target"}],"rule":[{"name":"item","source":[{"context":"src","element":"item","variable":"item","condition":"((linkId.value = 'sender.author.practitioner.familyName') and answer.exists())"}],"target":[{"context":"practitioner","contextType":"variable","element":"name","variable":"name","listMode":["share"],"listRuleId":"practitionerName"},{"context":"name","contextType":"variable","element":"family","transform":"evaluate","parameter":[{"valueString":"item.answer.value"}]}]},{"name":"item","source":[{"context":"src","element":"item","variable":"item","condition":"((linkId.value = 'sender.author.practitioner.givenName') and answer.exists())"}],"target":[{"context":"practitioner","contextType":"variable","element":"name","variable":"name","listMode":["share"],"listRuleId":"practitionerName"},{"context":"name","contextType":"variable","element":"given","transform":"evaluate","parameter":[{"valueString":"item.answer.value"}]}]},{"name":"sender.author.practitioner.title","source":[{"context":"src","element":"item","variable":"item","condition":"((linkId.value = 'sender.author.practitioner.title') and answer.exists())"}],"target":[{"context":"practitioner","contextType":"variable","element":"name","variable":"name","listMode":["share"],"listRuleId":"practitionerName"},{"context":"name","contextType":"variable","element":"prefix","variable":"prefix","transform":"evaluate","parameter":[{"valueString":"item.answer.value"}]},{"context":"prefix","contextType":"variable","element":"extension","variable":"ext"},{"context":"ext","contextType":"variable","element":"url","transform":"copy","parameter":[{"valueString":"http://hl7.org/fhir/StructureDefinition/iso21090-EN-qualifier"}]},{"context":"ext","contextType":"variable","element":"value","variable":"value","transform":"create","parameter":[{"valueString":"code"}]},{"context":"value","contextType":"variable","element":"value","transform":"copy","parameter":[{"valueString":"AC"}]}]},{"name":"sender.author.practitioner.gln","source":[{"context":"src","element":"item","variable":"item","condition":"((linkId.value = 'sender.author.practitioner.gln') and answer.exists())"}],"target":[{"context":"practitioner","contextType":"variable","element":"identifier","variable":"value"},{"context":"value","contextType":"variable","element":"system","transform":"copy","parameter":[{"valueString":"urn:oid:2.51.1.3"}]},{"context":"value","contextType":"variable","element":"value","transform":"evaluate","parameter":[{"valueString":"item.answer.value"}]}]},{"name":"recsender.author.practitioner.zsr","source":[{"context":"src","element":"item","variable":"item","condition":"((linkId.value = 'sender.author.practitioner.zsr') and answer.exists())"}],"target":[{"context":"practitioner","contextType":"variable","element":"identifier","variable":"value"},{"context":"value","contextType":"variable","element":"system","transform":"copy","parameter":[{"valueString":"urn:oid:2.16.756.5.30.1.123.100.2.1.1"}]},{"context":"value","contextType":"variable","element":"value","transform":"evaluate","parameter":[{"valueString":"item.answer.value"}]}]},{"name":"sender.author.practitioner.phone","source":[{"context":"src","element":"item","variable":"item","condition":"((linkId.value = 'sender.author.practitioner.phone') and answer.exists())"}],"target":[{"context":"practitioner","contextType":"variable","element":"telecom","variable":"value"},{"context":"value","contextType":"variable","element":"system","transform":"copy","parameter":[{"valueString":"phone"}]},{"context":"value","contextType":"variable","element":"value","transform":"evaluate","parameter":[{"valueString":"item.answer.value"}]}]},{"name":"sender.author.practitioner.email","source":[{"context":"src","element":"item","variable":"item","condition":"((linkId.value = 'sender.author.practitioner.email') and answer.exists())"}],"target":[{"context":"practitioner","contextType":"variable","element":"telecom","variable":"value"},{"context":"value","contextType":"variable","element":"system","transform":"copy","parameter":[{"valueString":"email"}]},{"context":"value","contextType":"variable","element":"value","transform":"evaluate","parameter":[{"valueString":"item.answer.value"}]}]}]},{"name":"SenderAuthorOrganizationItems","typeMode":"none","input":[{"name":"src","type":"BackboneElement","mode":"source"},{"name":"organization","type":"Organization","mode":"target"}],"rule":[{"name":"item","source":[{"context":"src","element":"item","variable":"item","condition":"((linkId.value = 'sender.author.organization.name') and answer.exists())"}],"target":[{"context":"organization","contextType":"variable","element":"name","transform":"evaluate","parameter":[{"valueString":"item.answer.value"}]}]},{"name":"sender.author.organization.gln","source":[{"context":"src","element":"item","variable":"item","condition":"((linkId.value = 'sender.author.organization.gln') and answer.exists())"}],"target":[{"context":"organization","contextType":"variable","element":"identifier","variable":"value"},{"context":"value","contextType":"variable","element":"system","transform":"copy","parameter":[{"valueString":"urn:oid:2.51.1.3"}]},{"context":"value","contextType":"variable","element":"value","transform":"evaluate","parameter":[{"valueString":"item.answer.value"}]}]},{"name":"sender.author.organization.zsr","source":[{"context":"src","element":"item","variable":"item","condition":"((linkId.value = 'sender.author.organization.zsr') and answer.exists())"}],"target":[{"context":"organization","contextType":"variable","element":"identifier","variable":"value"},{"context":"value","contextType":"variable","element":"system","transform":"copy","parameter":[{"valueString":"urn:oid:2.16.756.5.30.1.123.100.2.1.1"}]},{"context":"value","contextType":"variable","element":"value","transform":"evaluate","parameter":[{"valueString":"item.answer.value"}]}]},{"name":"item.answer","source":[{"context":"src","element":"item","variable":"item","condition":"((linkId.value = 'sender.author.organization.streetAddressLine') and answer.exists())"}],"target":[{"context":"organization","contextType":"variable","element":"address","variable":"address","listMode":["share"],"listRuleId":"orgAddress"}],"rule":[{"name":"sender.author.organization.streetAddressLine","source":[{"context":"item","element":"answer","variable":"answer"}],"target":[{"context":"address","contextType":"variable","element":"line","transform":"evaluate","parameter":[{"valueString":"answer.value"}]}]}]},{"name":"sender.author.organization.postalCode","source":[{"context":"src","element":"item","variable":"item","condition":"((linkId.value = 'sender.author.organization.postalCode') and answer.exists())"}],"target":[{"context":"organization","contextType":"variable","element":"address","variable":"address","listMode":["share"],"listRuleId":"orgAddress"},{"context":"address","contextType":"variable","element":"postalCode","transform":"evaluate","parameter":[{"valueString":"item.answer.value"}]}]},{"name":"sender.author.organization.city","source":[{"context":"src","element":"item","variable":"item","condition":"((linkId.value = 'sender.author.organization.city') and answer.exists())"}],"target":[{"context":"organization","contextType":"variable","element":"address","variable":"address","listMode":["share"],"listRuleId":"orgAddress"},{"context":"address","contextType":"variable","element":"city","transform":"evaluate","parameter":[{"valueString":"item.answer.value"}]}]},{"name":"sender.author.organization.country","source":[{"context":"src","element":"item","variable":"item","condition":"((linkId.value = 'sender.author.organization.country') and answer.exists())"}],"target":[{"context":"organization","contextType":"variable","element":"address","variable":"address","listMode":["share"],"listRuleId":"orgAddress"},{"context":"address","contextType":"variable","element":"country","transform":"evaluate","parameter":[{"valueString":"item.answer.value"}]}]}]},{"name":"SenderAuthorItems","typeMode":"none","input":[{"name":"src","type":"BackboneElement","mode":"source"},{"name":"practitionerRole","type":"practitionerRole","mode":"target"},{"name":"practitioner","type":"Practitioner","mode":"target"},{"name":"organization","type":"Organization","mode":"target"}],"rule":[{"name":"item","source":[{"context":"src","element":"item","variable":"item","condition":"(linkId.value = 'sender.author.practitioner')"}],"dependent":[{"name":"SenderAuthorPractitionerItems","variable":["item","practitioner"]}]},{"name":"item","source":[{"context":"src","element":"item","variable":"item","condition":"(linkId.value = 'sender.author.organization')"}],"dependent":[{"name":"SenderAuthorOrganizationItems","variable":["item","organization"]}]}]},{"name":"SenderDataEntererPractitionerItems","typeMode":"none","input":[{"name":"src","type":"BackboneElement","mode":"source"},{"name":"practitioner","type":"Practitioner","mode":"target"}],"rule":[{"name":"item","source":[{"context":"src","element":"item","variable":"item","condition":"((linkId.value = 'sender.dataenterer.practitioner.familyName') and answer.exists())"}],"target":[{"context":"practitioner","contextType":"variable","element":"name","variable":"name","listMode":["share"],"listRuleId":"practitionerName"},{"context":"name","contextType":"variable","element":"family","transform":"evaluate","parameter":[{"valueString":"item.answer.value"}]}]},{"name":"item","source":[{"context":"src","element":"item","variable":"item","condition":"((linkId.value = 'sender.dataenterer.practitioner.givenName') and answer.exists())"}],"target":[{"context":"practitioner","contextType":"variable","element":"name","variable":"name","listMode":["share"],"listRuleId":"practitionerName"},{"context":"name","contextType":"variable","element":"given","transform":"evaluate","parameter":[{"valueString":"item.answer.value"}]}]},{"name":"sender.author.practitioner.phone","source":[{"context":"src","element":"item","variable":"item","condition":"((linkId.value = 'sender.dataenterer.practitioner.phone') and answer.exists())"}],"target":[{"context":"practitioner","contextType":"variable","element":"telecom","variable":"value"},{"context":"value","contextType":"variable","element":"system","transform":"copy","parameter":[{"valueString":"phone"}]},{"context":"value","contextType":"variable","element":"value","transform":"evaluate","parameter":[{"valueString":"item.answer.value"}]}]},{"name":"sender.author.practitioner.email","source":[{"context":"src","element":"item","variable":"item","condition":"((linkId.value = 'sender.dataenterer.practitioner.email') and answer.exists())"}],"target":[{"context":"practitioner","contextType":"variable","element":"telecom","variable":"value"},{"context":"value","contextType":"variable","element":"system","transform":"copy","parameter":[{"valueString":"email"}]},{"context":"value","contextType":"variable","element":"value","transform":"evaluate","parameter":[{"valueString":"item.answer.value"}]}]}]},{"name":"SenderDataEntererItems","typeMode":"none","input":[{"name":"src","type":"BackboneElement","mode":"source"},{"name":"practitionerRole","type":"practitionerRole","mode":"target"},{"name":"practitioner","type":"Practitioner","mode":"target"},{"name":"organization","type":"Organization","mode":"target"}],"rule":[{"name":"item","source":[{"context":"src","element":"item","variable":"item","condition":"(linkId.value = 'sender.dataenterer.practitioner')"}],"dependent":[{"name":"SenderDataEntererPractitionerItems","variable":["item","practitioner"]}]}]},{"name":"ChExtEprDataEnterer","typeMode":"none","input":[{"name":"src","type":"BackboneElement","mode":"source"},{"name":"practitionerRole","type":"PractitionerRole","mode":"target"},{"name":"ext","type":"Extension","mode":"target"}],"rule":[{"name":"url","source":[{"context":"src"}],"target":[{"context":"ext","contextType":"variable","element":"url","transform":"copy","parameter":[{"valueString":"http://fhir.ch/ig/ch-core/StructureDefinition/ch-ext-epr-dataenterer"}]}]},{"name":"practitionerRole","source":[{"context":"src"}],"target":[{"context":"ext","contextType":"variable","element":"extension","variable":"ext"},{"context":"ext","contextType":"variable","element":"url","transform":"copy","parameter":[{"valueString":"enterer"}]},{"context":"ext","contextType":"variable","element":"value","variable":"reference","transform":"create","parameter":[{"valueString":"Reference"}]},{"context":"reference","contextType":"variable","element":"reference","transform":"evaluate","parameter":[{"valueString":"'urn:uuid:' + %practitionerRole.id"}]}]}]},{"name":"SenderAuthorInit","typeMode":"none","input":[{"name":"src","type":"BackboneElement","mode":"source"},{"name":"bundle","type":"Bundle","mode":"target"},{"name":"composition","type":"Composition","mode":"target"},{"name":"serviceRequest","type":"ServiceRequest","mode":"target"}],"rule":[{"name":"sender","source":[{"context":"src"}],"target":[{"context":"bundle","contextType":"variable","element":"entry","variable":"e"},{"context":"e","contextType":"variable","element":"resource","variable":"practitionerRole","transform":"create","parameter":[{"valueString":"PractitionerRole"}]},{"context":"practitionerRole","contextType":"variable","element":"id","variable":"uuid","transform":"uuid"},{"context":"e","contextType":"variable","element":"fullUrl","transform":"append","parameter":[{"valueString":"urn:uuid:"},{"valueId":"uuid"}]},{"context":"bundle","contextType":"variable","element":"entry","variable":"e2"},{"context":"e2","contextType":"variable","element":"resource","variable":"practitioner","transform":"create","parameter":[{"valueString":"Practitioner"}]},{"context":"practitioner","contextType":"variable","element":"id","variable":"uuid2","transform":"uuid"},{"context":"e2","contextType":"variable","element":"fullUrl","transform":"append","parameter":[{"valueString":"urn:uuid:"},{"valueId":"uuid2"}]},{"context":"bundle","contextType":"variable","element":"entry","variable":"e3"},{"context":"e3","contextType":"variable","element":"resource","variable":"organization","transform":"create","parameter":[{"valueString":"Organization"}]},{"context":"organization","contextType":"variable","element":"id","variable":"uuid3","transform":"uuid"},{"context":"e3","contextType":"variable","element":"fullUrl","transform":"append","parameter":[{"valueString":"urn:uuid:"},{"valueId":"uuid3"}]},{"context":"composition","contextType":"variable","element":"author","variable":"reference","transform":"create","parameter":[{"valueString":"Reference"}]},{"context":"reference","contextType":"variable","element":"reference","transform":"append","parameter":[{"valueString":"urn:uuid:"},{"valueId":"uuid"}]},{"context":"serviceRequest","contextType":"variable","element":"requester","variable":"reference","transform":"create","parameter":[{"valueString":"Reference"}]},{"context":"reference","contextType":"variable","element":"reference","transform":"append","parameter":[{"valueString":"urn:uuid:"},{"valueId":"uuid"}]},{"context":"practitionerRole","contextType":"variable","element":"practitioner","variable":"reference","transform":"create","parameter":[{"valueString":"Reference"}]},{"context":"reference","contextType":"variable","element":"reference","transform":"append","parameter":[{"valueString":"urn:uuid:"},{"valueId":"uuid2"}]},{"context":"practitionerRole","contextType":"variable","element":"organization","variable":"reference","transform":"create","parameter":[{"valueString":"Reference"}]},{"context":"reference","contextType":"variable","element":"reference","transform":"append","parameter":[{"valueString":"urn:uuid:"},{"valueId":"uuid3"}]}],"rule":[{"name":"sender.author","source":[{"context":"src","element":"item","variable":"item","condition":"(linkId.value = 'sender.author')"}],"dependent":[{"name":"SenderAuthorItems","variable":["item","practitionerRole","practitioner","organization"]}]},{"name":"sender.dataenterer","source":[{"context":"src","element":"item","variable":"item","condition":"(linkId.value = 'sender.dataenterer')"}],"rule":[{"name":"sender.dataenterer.items","source":[{"context":"item"}],"target":[{"context":"bundle","contextType":"variable","element":"entry","variable":"e4"},{"context":"e4","contextType":"variable","element":"resource","variable":"practitionerRoleDataEnterer","transform":"create","parameter":[{"valueString":"PractitionerRole"}]},{"context":"practitionerRoleDataEnterer","contextType":"variable","element":"id","variable":"uuid4","transform":"uuid"},{"context":"e4","contextType":"variable","element":"fullUrl","transform":"append","parameter":[{"valueString":"urn:uuid:"},{"valueId":"uuid4"}]},{"context":"composition","contextType":"variable","element":"extension","variable":"extension"},{"context":"bundle","contextType":"variable","element":"entry","variable":"e5"},{"context":"e5","contextType":"variable","element":"resource","variable":"practitionerDataEnterer","transform":"create","parameter":[{"valueString":"Practitioner"}]},{"context":"practitionerDataEnterer","contextType":"variable","element":"id","variable":"uuid5","transform":"uuid"},{"context":"e5","contextType":"variable","element":"fullUrl","transform":"append","parameter":[{"valueString":"urn:uuid:"},{"valueId":"uuid5"}]},{"context":"practitionerRoleDataEnterer","contextType":"variable","element":"practitioner","variable":"reference","transform":"create","parameter":[{"valueString":"Reference"}]},{"context":"reference","contextType":"variable","element":"reference","transform":"append","parameter":[{"valueString":"urn:uuid:"},{"valueId":"uuid5"}]},{"context":"practitionerRoleDataEnterer","contextType":"variable","element":"organization","variable":"reference","transform":"create","parameter":[{"valueString":"Reference"}]},{"context":"reference","contextType":"variable","element":"reference","transform":"append","parameter":[{"valueString":"urn:uuid:"},{"valueId":"uuid3"}]}],"rule":[{"name":"data","source":[{"context":"item"}],"dependent":[{"name":"SenderDataEntererItems","variable":["item","practitionerRoleDataEnterer","practitionerDataEnterer","organization"]}]},{"name":"extension","source":[{"context":"item"}],"dependent":[{"name":"ChExtEprDataEnterer","variable":["item","practitionerRoleDataEnterer","extension"]}]}]}]}]}]},{"name":"ReceiverCopyRelatedPersonItems","typeMode":"none","input":[{"name":"src","type":"BackboneElement","mode":"source"},{"name":"relatedPerson","type":"RelatedPerson","mode":"target"}],"rule":[{"name":"item","source":[{"context":"src","element":"item","variable":"item","condition":"((linkId.value = 'receiverCopy.relatedPerson.familyName') and answer.exists())"}],"target":[{"context":"relatedPerson","contextType":"variable","element":"name","variable":"name","listMode":["share"],"listRuleId":"name"},{"context":"name","contextType":"variable","element":"family","transform":"evaluate","parameter":[{"valueString":"item.answer.value"}]}]},{"name":"item","source":[{"context":"src","element":"item","variable":"item","condition":"((linkId.value = 'receiverCopy.relatedPerson.givenName') and answer.exists())"}],"target":[{"context":"relatedPerson","contextType":"variable","element":"name","variable":"name","listMode":["share"],"listRuleId":"name"},{"context":"name","contextType":"variable","element":"given","transform":"evaluate","parameter":[{"valueString":"item.answer.value"}]}]},{"name":"phone","source":[{"context":"src","element":"item","variable":"item","condition":"((linkId.value = 'receiverCopy.relatedPerson.phone') and answer.exists())"}],"rule":[{"name":"receiverCopy.relatedPerson.phone","source":[{"context":"item","element":"answer","variable":"answer"}],"target":[{"context":"relatedPerson","contextType":"variable","element":"telecom","variable":"value"},{"context":"value","contextType":"variable","element":"system","transform":"copy","parameter":[{"valueString":"phone"}]},{"context":"value","contextType":"variable","element":"value","transform":"evaluate","parameter":[{"valueString":"answer.value"}]}]}]},{"name":"receiverCopy.relatedPerson.email","source":[{"context":"src","element":"item","variable":"item","condition":"((linkId.value = 'receiverCopy.relatedPerson.email') and answer.exists())"}],"target":[{"context":"relatedPerson","contextType":"variable","element":"telecom","variable":"value"},{"context":"value","contextType":"variable","element":"system","transform":"copy","parameter":[{"valueString":"email"}]},{"context":"value","contextType":"variable","element":"value","transform":"evaluate","parameter":[{"valueString":"item.answer.value"}]}]},{"name":"item.answer","source":[{"context":"src","element":"item","variable":"item","condition":"((linkId.value = 'receiverCopy.relatedPerson.streetAddressLine') and answer.exists())"}],"target":[{"context":"relatedPerson","contextType":"variable","element":"address","variable":"address","listMode":["share"],"listRuleId":"orgAddress"}],"rule":[{"name":"receiverCopy.relatedPerson.streetAddressLine","source":[{"context":"item","element":"answer","variable":"answer"}],"target":[{"context":"address","contextType":"variable","element":"line","transform":"evaluate","parameter":[{"valueString":"answer.value"}]}]}]},{"name":"receiverCopy.relatedPerson.postalCode","source":[{"context":"src","element":"item","variable":"item","condition":"((linkId.value = 'receiverCopy.relatedPerson.postalCode') and answer.exists())"}],"target":[{"context":"relatedPerson","contextType":"variable","element":"address","variable":"address","listMode":["share"],"listRuleId":"orgAddress"},{"context":"address","contextType":"variable","element":"postalCode","transform":"evaluate","parameter":[{"valueString":"item.answer.value"}]}]},{"name":"receiverCopy.relatedPerson.city","source":[{"context":"src","element":"item","variable":"item","condition":"((linkId.value = 'receiverCopy.relatedPerson.city') and answer.exists())"}],"target":[{"context":"relatedPerson","contextType":"variable","element":"address","variable":"address","listMode":["share"],"listRuleId":"orgAddress"},{"context":"address","contextType":"variable","element":"city","transform":"evaluate","parameter":[{"valueString":"item.answer.value"}]}]},{"name":"receiverCopy.relatedPerson.country","source":[{"context":"src","element":"item","variable":"item","condition":"((linkId.value = 'receiverCopy.relatedPerson.country') and answer.exists())"}],"target":[{"context":"relatedPerson","contextType":"variable","element":"address","variable":"address","listMode":["share"],"listRuleId":"orgAddress"},{"context":"address","contextType":"variable","element":"country","transform":"evaluate","parameter":[{"valueString":"item.answer.value"}]}]}]},{"name":"ReceiverCopyPractitionerItems","typeMode":"none","input":[{"name":"src","type":"BackboneElement","mode":"source"},{"name":"practitioner","type":"Practitioner","mode":"target"}],"rule":[{"name":"item","source":[{"context":"src","element":"item","variable":"item","condition":"((linkId.value = 'receiverCopy.practitionerRole.practitioner.familyName') and answer.exists())"}],"target":[{"context":"practitioner","contextType":"variable","element":"name","variable":"name","listMode":["share"],"listRuleId":"practitionerName"},{"context":"name","contextType":"variable","element":"family","transform":"evaluate","parameter":[{"valueString":"item.answer.value"}]}]},{"name":"item","source":[{"context":"src","element":"item","variable":"item","condition":"((linkId.value = 'receiverCopy.practitionerRole.practitioner.givenName') and answer.exists())"}],"target":[{"context":"practitioner","contextType":"variable","element":"name","variable":"name","listMode":["share"],"listRuleId":"practitionerName"},{"context":"name","contextType":"variable","element":"given","transform":"evaluate","parameter":[{"valueString":"item.answer.value"}]}]},{"name":"receiverCopy.practitionerRole.practitioner.title","source":[{"context":"src","element":"item","variable":"item","condition":"((linkId.value = 'receiverCopy.practitionerRole.practitioner.title') and answer.exists())"}],"target":[{"context":"practitioner","contextType":"variable","element":"name","variable":"name","listMode":["share"],"listRuleId":"practitionerName"},{"context":"name","contextType":"variable","element":"prefix","variable":"prefix","transform":"evaluate","parameter":[{"valueString":"item.answer.value"}]},{"context":"prefix","contextType":"variable","element":"extension","variable":"ext"},{"context":"ext","contextType":"variable","element":"url","transform":"copy","parameter":[{"valueString":"http://hl7.org/fhir/StructureDefinition/iso21090-EN-qualifier"}]},{"context":"ext","contextType":"variable","element":"value","variable":"value","transform":"create","parameter":[{"valueString":"code"}]},{"context":"value","contextType":"variable","element":"value","transform":"copy","parameter":[{"valueString":"AC"}]}]},{"name":"receiverCopy.practitionerRole.practitioner.phone","source":[{"context":"src","element":"item","variable":"item","condition":"((linkId.value = 'receiverCopy.practitionerRole.practitioner.phone') and answer.exists())"}],"target":[{"context":"practitioner","contextType":"variable","element":"telecom","variable":"value"},{"context":"value","contextType":"variable","element":"system","transform":"copy","parameter":[{"valueString":"phone"}]},{"context":"value","contextType":"variable","element":"value","transform":"evaluate","parameter":[{"valueString":"item.answer.value"}]}]},{"name":"receiverCopy.practitionerRole.practitioner.email","source":[{"context":"src","element":"item","variable":"item","condition":"((linkId.value = 'receiverCopy.practitionerRole.practitioner.email') and answer.exists())"}],"target":[{"context":"practitioner","contextType":"variable","element":"telecom","variable":"value"},{"context":"value","contextType":"variable","element":"system","transform":"copy","parameter":[{"valueString":"email"}]},{"context":"value","contextType":"variable","element":"value","transform":"evaluate","parameter":[{"valueString":"item.answer.value"}]}]}]},{"name":"ReceiverCopyOrganizationItems","typeMode":"none","input":[{"name":"src","type":"BackboneElement","mode":"source"},{"name":"organization","type":"Organization","mode":"target"}],"rule":[{"name":"item","source":[{"context":"src","element":"item","variable":"item","condition":"((linkId.value = 'receiverCopy.practitionerRole.organization.name') and answer.exists())"}],"target":[{"context":"organization","contextType":"variable","element":"name","transform":"evaluate","parameter":[{"valueString":"item.answer.value"}]}]},{"name":"item.answer","source":[{"context":"src","element":"item","variable":"item","condition":"((linkId.value = 'receiverCopy.practitionerRole.organization.streetAddressLine') and answer.exists())"}],"target":[{"context":"organization","contextType":"variable","element":"address","variable":"address","listMode":["share"],"listRuleId":"orgAddress"}],"rule":[{"name":"receiverCopy.practitionerRole.organization.streetAddressLine","source":[{"context":"item","element":"answer","variable":"answer"}],"target":[{"context":"address","contextType":"variable","element":"line","transform":"evaluate","parameter":[{"valueString":"answer.value"}]}]}]},{"name":"receiverCopy.practitionerRole.organization.postalCode","source":[{"context":"src","element":"item","variable":"item","condition":"((linkId.value = 'receiverCopy.practitionerRole.organization.postalCode') and answer.exists())"}],"target":[{"context":"organization","contextType":"variable","element":"address","variable":"address","listMode":["share"],"listRuleId":"orgAddress"},{"context":"address","contextType":"variable","element":"postalCode","transform":"evaluate","parameter":[{"valueString":"item.answer.value"}]}]},{"name":"receiverCopy.practitionerRole.organization.city","source":[{"context":"src","element":"item","variable":"item","condition":"((linkId.value = 'receiverCopy.practitionerRole.organization.city') and answer.exists())"}],"target":[{"context":"organization","contextType":"variable","element":"address","variable":"address","listMode":["share"],"listRuleId":"orgAddress"},{"context":"address","contextType":"variable","element":"city","transform":"evaluate","parameter":[{"valueString":"item.answer.value"}]}]},{"name":"receiverCopy.practitionerRole.organization.country","source":[{"context":"src","element":"item","variable":"item","condition":"((linkId.value = 'receiverCopy.practitionerRole.organization.country') and answer.exists())"}],"target":[{"context":"organization","contextType":"variable","element":"address","variable":"address","listMode":["share"],"listRuleId":"orgAddress"},{"context":"address","contextType":"variable","element":"country","transform":"evaluate","parameter":[{"valueString":"item.answer.value"}]}]}]},{"name":"ReceiverCopyPractitionerRoleItems","typeMode":"none","input":[{"name":"src","type":"BackboneElement","mode":"source"},{"name":"bundle","type":"Bundle","mode":"target"},{"name":"practitionerRole","type":"practitionerRole","mode":"target"}],"rule":[{"name":"item","source":[{"context":"src","element":"item","variable":"item","condition":"(linkId.value = 'receiverCopy.practitionerRole.practitioner')"}],"target":[{"context":"bundle","contextType":"variable","element":"entry","variable":"e2"},{"context":"e2","contextType":"variable","element":"resource","variable":"practitioner","transform":"create","parameter":[{"valueString":"Practitioner"}]},{"context":"practitioner","contextType":"variable","element":"id","variable":"uuid2","transform":"uuid"},{"context":"practitionerRole","contextType":"variable","element":"practitioner","variable":"reference","transform":"create","parameter":[{"valueString":"Reference"}]},{"context":"reference","contextType":"variable","element":"reference","transform":"append","parameter":[{"valueString":"urn:uuid:"},{"valueId":"uuid2"}]},{"context":"e2","contextType":"variable","element":"fullUrl","transform":"append","parameter":[{"valueString":"urn:uuid:"},{"valueId":"uuid2"}]}],"dependent":[{"name":"ReceiverCopyPractitionerItems","variable":["item","practitioner"]}]},{"name":"item","source":[{"context":"src","element":"item","variable":"item","condition":"(linkId.value = 'receiverCopy.practitionerRole.organization')"}],"target":[{"context":"bundle","contextType":"variable","element":"entry","variable":"e3"},{"context":"e3","contextType":"variable","element":"resource","variable":"organization","transform":"create","parameter":[{"valueString":"Organization"}]},{"context":"organization","contextType":"variable","element":"id","variable":"uuid3","transform":"uuid"},{"context":"practitionerRole","contextType":"variable","element":"organization","variable":"reference","transform":"create","parameter":[{"valueString":"Reference"}]},{"context":"reference","contextType":"variable","element":"reference","transform":"append","parameter":[{"valueString":"urn:uuid:"},{"valueId":"uuid3"}]},{"context":"e3","contextType":"variable","element":"fullUrl","transform":"append","parameter":[{"valueString":"urn:uuid:"},{"valueId":"uuid3"}]}],"dependent":[{"name":"ReceiverCopyOrganizationItems","variable":["item","organization"]}]}]},{"name":"ExtOrfCopyReceiverPatient","typeMode":"none","input":[{"name":"src","type":"BackboneElement","mode":"source"},{"name":"patient","type":"Patient","mode":"target"},{"name":"ext","type":"Extension","mode":"target"}],"rule":[{"name":"url","source":[{"context":"src"}],"target":[{"context":"ext","contextType":"variable","element":"url","transform":"copy","parameter":[{"valueString":"http://fhir.ch/ig/ch-orf/StructureDefinition/ch-orf-copyreceiver"}]}]},{"name":"patient","source":[{"context":"src"}],"target":[{"context":"ext","contextType":"variable","element":"value","variable":"reference","transform":"create","parameter":[{"valueString":"Reference"}]},{"context":"reference","contextType":"variable","element":"reference","transform":"evaluate","parameter":[{"valueString":"'urn:uuid:' + %patient.id"}]}]}]},{"name":"ExtOrfCopyReceiver","typeMode":"none","input":[{"name":"src","type":"BackboneElement","mode":"source"},{"name":"res","mode":"target"},{"name":"ext","type":"Extension","mode":"target"}],"rule":[{"name":"url","source":[{"context":"src"}],"target":[{"context":"ext","contextType":"variable","element":"url","transform":"copy","parameter":[{"valueString":"http://fhir.ch/ig/ch-orf/StructureDefinition/ch-orf-copyreceiver"}]}]},{"name":"organization","source":[{"context":"src"}],"target":[{"context":"ext","contextType":"variable","element":"value","variable":"reference","transform":"create","parameter":[{"valueString":"Reference"}]},{"context":"reference","contextType":"variable","element":"reference","transform":"evaluate","parameter":[{"valueString":"'urn:uuid:' + %res.id"}]}]}]},{"name":"ReceiverCopy","typeMode":"none","input":[{"name":"grp","type":"BackboneElement","mode":"source"},{"name":"bundle","type":"Bundle","mode":"target"},{"name":"patient","type":"Patient","mode":"target"},{"name":"composition","type":"Composition","mode":"target"},{"name":"serviceRequest","type":"ServiceRequest","mode":"target"}],"rule":[{"name":"receiverCopyPractitionerRole","source":[{"context":"grp","element":"item","variable":"item","condition":"(linkId = 'receiverCopy.practitionerRole')"}],"target":[{"context":"bundle","contextType":"variable","element":"entry","variable":"e4"},{"context":"e4","contextType":"variable","element":"resource","variable":"practitionerrole","transform":"create","parameter":[{"valueString":"PractitionerRole"}]},{"context":"composition","contextType":"variable","element":"extension","variable":"extension"},{"context":"practitionerrole","contextType":"variable","element":"id","variable":"uuid4","transform":"uuid"},{"context":"e4","contextType":"variable","element":"fullUrl","transform":"append","parameter":[{"valueString":"urn:uuid:"},{"valueId":"uuid4"}]}],"rule":[{"name":"data","source":[{"context":"item"}],"dependent":[{"name":"ReceiverCopyPractitionerRoleItems","variable":["item","bundle","practitionerrole"]}]},{"name":"extension","source":[{"context":"item"}],"dependent":[{"name":"ExtOrfCopyReceiver","variable":["item","practitionerrole","extension"]}]}]},{"name":"receiverCopyPractitionerRole","source":[{"context":"grp","element":"item","variable":"item","condition":"(linkId = 'receiverCopy.patient')"}],"target":[{"context":"composition","contextType":"variable","element":"extension","variable":"extension"}],"rule":[{"name":"extension","source":[{"context":"item"}],"dependent":[{"name":"ExtOrfCopyReceiver","variable":["item","patient","extension"]}]}]},{"name":"receiverCopyPractitionerRole","source":[{"context":"grp","element":"item","variable":"item","condition":"(linkId = 'receiverCopy.relatedPerson')"}],"target":[{"context":"bundle","contextType":"variable","element":"entry","variable":"e4"},{"context":"e4","contextType":"variable","element":"resource","variable":"relatedPerson","transform":"create","parameter":[{"valueString":"RelatedPerson"}]},{"context":"composition","contextType":"variable","element":"extension","variable":"extension"},{"context":"relatedPerson","contextType":"variable","element":"id","variable":"uuid4","transform":"uuid"},{"context":"relatedPerson","contextType":"variable","element":"patient","variable":"reference"},{"context":"reference","contextType":"variable","element":"reference","transform":"evaluate","parameter":[{"valueString":"'urn:uuid:' + %patient.id"}]},{"context":"e4","contextType":"variable","element":"fullUrl","transform":"append","parameter":[{"valueString":"urn:uuid:"},{"valueId":"uuid4"}]}],"rule":[{"name":"data","source":[{"context":"item"}],"dependent":[{"name":"ReceiverCopyRelatedPersonItems","variable":["item","relatedPerson"]}]},{"name":"extension","source":[{"context":"item"}],"dependent":[{"name":"ExtOrfCopyReceiver","variable":["item","relatedPerson","extension"]}]}]}]},{"name":"Appointment","typeMode":"none","input":[{"name":"grp","type":"BackboneElement","mode":"source"},{"name":"bundle","type":"Bundle","mode":"target"},{"name":"composition","type":"Composition","mode":"target"},{"name":"serviceRequest","type":"ServiceRequest","mode":"target"}],"rule":[{"name":"Appointment","source":[{"context":"grp"}],"target":[{"context":"bundle","contextType":"variable","element":"entry","variable":"e4"},{"context":"e4","contextType":"variable","element":"resource","variable":"appointment","transform":"create","parameter":[{"valueString":"Appointment"}]},{"context":"appointment","contextType":"variable","element":"id","variable":"uuid4","transform":"uuid"},{"context":"e4","contextType":"variable","element":"fullUrl","transform":"evaluate","parameter":[{"valueString":"'urn:uuid:' + %uuid4"}]},{"context":"serviceRequest","contextType":"variable","element":"extension","variable":"extension"},{"context":"extension","contextType":"variable","element":"url","transform":"copy","parameter":[{"valueString":"http://fhir.ch/ig/ch-orf/StructureDefinition/ch-orf-locationandtime"}]},{"context":"extension","contextType":"variable","element":"value","variable":"reference","transform":"create","parameter":[{"valueString":"Reference"}]},{"context":"reference","contextType":"variable","element":"reference","transform":"evaluate","parameter":[{"valueString":"'urn:uuid:' + %uuid4"}]}],"rule":[{"name":"proposed","source":[{"context":"grp","element":"item","variable":"item","condition":"((linkId.value = 'appointment.status') and (answer.value.code = 'proposed'))"}],"target":[{"context":"appointment","contextType":"variable","element":"status","transform":"evaluate","parameter":[{"valueString":"item.answer.value.code"}]}],"rule":[{"name":"appointment.requestedPeriod","source":[{"context":"grp","element":"item","variable":"itemp","condition":"(linkId.value = 'appointment.requestedPeriod')"}],"rule":[{"name":"appointment.requestedPeriod.start","source":[{"context":"itemp","element":"item","variable":"item2","condition":"((linkId.value = 'appointment.requestedPeriod.start') and answer.exists())"}],"target":[{"context":"appointment","contextType":"variable","element":"requestedPeriod","variable":"requestedPeriod"},{"context":"requestedPeriod","contextType":"variable","element":"start","transform":"evaluate","parameter":[{"valueString":"item2.answer.value"}]},{"context":"requestedPeriod","contextType":"variable","element":"end","transform":"evaluate","parameter":[{"valueString":"item2.answer.value"}]}],"rule":[{"name":"appointment.requestedPeriod.end.if.not.same.as.start","source":[{"context":"itemp","element":"item","variable":"item3","condition":"((linkId.value = 'appointment.requestedPeriod.end') and answer.exists())"}],"target":[{"context":"requestedPeriod","contextType":"variable","element":"end","transform":"evaluate","parameter":[{"valueString":"item3.answer.value"}]}]}]}]}]},{"name":"pendingorbooked","source":[{"context":"grp","element":"item","variable":"item","condition":"((linkId.value = 'appointment.status') and ((answer.value.code = 'pending') or (answer.value.code = 'booked')))"}],"target":[{"context":"appointment","contextType":"variable","element":"status","transform":"evaluate","parameter":[{"valueString":"item.answer.value.code"}]}],"rule":[{"name":"appointment.startend","source":[{"context":"grp","element":"item","variable":"itemp","condition":"(linkId.value = 'appointment.requestedPeriod')"}],"rule":[{"name":"appointment.start","source":[{"context":"itemp","element":"item","variable":"item2","condition":"((linkId.value = 'appointment.requestedPeriod.start') and answer.exists())"}],"target":[{"context":"appointment","contextType":"variable","element":"start","transform":"evaluate","parameter":[{"valueString":"item2.answer.value"}]},{"context":"appointment","contextType":"variable","element":"end","transform":"evaluate","parameter":[{"valueString":"item2.answer.value"}]}],"rule":[{"name":"appointment.end.if.not.same.as.start","source":[{"context":"itemp","element":"item","variable":"item3","condition":"((linkId.value = 'appointment.requestedPeriod.end') and answer.exists())"}],"target":[{"context":"appointment","contextType":"variable","element":"end","transform":"evaluate","parameter":[{"valueString":"item3.answer.value"}]}]}]}]}]},{"name":"appointment.patientInstruction","source":[{"context":"grp","element":"item","variable":"item","condition":"((linkId.value = 'appointment.patientInstruction') and answer.exists())"}],"target":[{"context":"appointment","contextType":"variable","element":"patientInstruction","transform":"evaluate","parameter":[{"valueString":"item.answer.value"}]}]},{"name":"appointment.location","source":[{"context":"grp","element":"item","variable":"item","condition":"(linkId.value = 'appointment.location')"}],"rule":[{"name":"location","source":[{"context":"item"}],"target":[{"context":"bundle","contextType":"variable","element":"entry","variable":"e5"},{"context":"e5","contextType":"variable","element":"resource","variable":"location","transform":"create","parameter":[{"valueString":"Location"}]},{"context":"location","contextType":"variable","element":"id","variable":"uuid5","transform":"uuid"},{"context":"e5","contextType":"variable","element":"fullUrl","transform":"evaluate","parameter":[{"valueString":"'urn:uuid:' + %uuid5"}]},{"context":"appointment","contextType":"variable","element":"participant","variable":"participant"},{"context":"participant","contextType":"variable","element":"status","transform":"copy","parameter":[{"valueString":"tentative"}]},{"context":"participant","contextType":"variable","element":"actor","variable":"actor","transform":"create","parameter":[{"valueString":"Reference"}]},{"context":"actor","contextType":"variable","element":"reference","transform":"evaluate","parameter":[{"valueString":"'urn:uuid:' + %location.id"}]}],"rule":[{"name":"item","source":[{"context":"item","element":"item","variable":"item3","condition":"((linkId.value = 'appointment.location.name') and answer.exists())"}],"target":[{"context":"location","contextType":"variable","element":"name","transform":"evaluate","parameter":[{"valueString":"item3.answer.value"}]}]},{"name":"appointment.location.phone","source":[{"context":"item","element":"item","variable":"item3","condition":"((linkId.value = 'appointment.location.phone') and answer.exists())"}],"target":[{"context":"location","contextType":"variable","element":"telecom","variable":"value"},{"context":"value","contextType":"variable","element":"system","transform":"copy","parameter":[{"valueString":"phone"}]},{"context":"value","contextType":"variable","element":"value","transform":"evaluate","parameter":[{"valueString":"item3.answer.value"}]}]},{"name":"appointment.location.email","source":[{"context":"item","element":"item","variable":"item3","condition":"((linkId.value = 'appointment.location.email') and answer.exists())"}],"target":[{"context":"location","contextType":"variable","element":"telecom","variable":"value"},{"context":"value","contextType":"variable","element":"system","transform":"copy","parameter":[{"valueString":"email"}]},{"context":"value","contextType":"variable","element":"value","transform":"evaluate","parameter":[{"valueString":"item3.answer.value"}]}]},{"name":"appointment.location.streetAddressLine","source":[{"context":"item","element":"item","variable":"item3","condition":"((linkId.value = 'appointment.location.streetAddressLine') and answer.exists())"}],"target":[{"context":"location","contextType":"variable","element":"address","variable":"address","listMode":["share"],"listRuleId":"orgAddress"}],"rule":[{"name":"line","source":[{"context":"item","element":"answer","variable":"answer"}],"target":[{"context":"address","contextType":"variable","element":"line","transform":"evaluate","parameter":[{"valueString":"answer.value"}]}]}]},{"name":"appointment.location.postalCode","source":[{"context":"item","element":"item","variable":"item3","condition":"((linkId.value = 'appointment.location.postalCode') and answer.exists())"}],"target":[{"context":"location","contextType":"variable","element":"address","variable":"address","listMode":["share"],"listRuleId":"orgAddress"},{"context":"address","contextType":"variable","element":"postalCode","transform":"evaluate","parameter":[{"valueString":"item3.answer.value"}]}]},{"name":"appointment.location.city","source":[{"context":"item","element":"item","variable":"item3","condition":"((linkId.value = 'appointment.location.city') and answer.exists())"}],"target":[{"context":"location","contextType":"variable","element":"address","variable":"address","listMode":["share"],"listRuleId":"orgAddress"},{"context":"address","contextType":"variable","element":"city","transform":"evaluate","parameter":[{"valueString":"item3.answer.value"}]}]},{"name":"appointment.location.country","source":[{"context":"item","element":"item","variable":"item3","condition":"((linkId.value = 'appointment.location.country') and answer.exists())"}],"target":[{"context":"location","contextType":"variable","element":"address","variable":"address","listMode":["share"],"listRuleId":"orgAddress"},{"context":"address","contextType":"variable","element":"country","transform":"evaluate","parameter":[{"valueString":"item3.answer.value"}]}]}]}]}]}]},{"name":"PreviousResults","typeMode":"none","input":[{"name":"grp","type":"BackboneElement","mode":"source"},{"name":"bundle","type":"Bundle","mode":"target"},{"name":"serviceRequest","type":"ServiceRequest","mode":"target"}],"rule":[{"name":"item","source":[{"context":"grp","element":"item","variable":"item","condition":"((linkId = 'previousResults.attachment') and answer.exists())"}],"rule":[{"name":"answer","source":[{"context":"item","element":"answer","variable":"answer"}],"rule":[{"name":"media","source":[{"context":"answer","type":"Attachment","element":"value","variable":"attachment"}],"target":[{"context":"bundle","contextType":"variable","element":"entry","variable":"e"},{"context":"e","contextType":"variable","element":"resource","variable":"media","transform":"create","parameter":[{"valueString":"Media"}]},{"context":"media","contextType":"variable","element":"id","variable":"uuid","transform":"uuid"},{"context":"media","contextType":"variable","element":"status","transform":"copy","parameter":[{"valueString":"completed"}]},{"context":"e","contextType":"variable","element":"fullUrl","transform":"append","parameter":[{"valueString":"urn:uuid:"},{"valueId":"uuid"}]},{"context":"media","contextType":"variable","element":"content","transform":"copy","parameter":[{"valueId":"attachment"}]},{"context":"serviceRequest","contextType":"variable","element":"supportingInfo","variable":"supportingInfo"},{"context":"supportingInfo","contextType":"variable","element":"reference","transform":"evaluate","parameter":[{"valueString":"'urn:uuid:' + uuid"}]}]}]}]}]},{"name":"Note","typeMode":"none","input":[{"name":"grp","type":"BackboneElement","mode":"source"},{"name":"serviceRequest","type":"ServiceRequest","mode":"target"}],"rule":[{"name":"note.text","source":[{"context":"grp","element":"item","variable":"item","condition":"((linkId = 'note.text') and answer.exists())"}],"target":[{"context":"serviceRequest","contextType":"variable","element":"note","variable":"note"},{"context":"note","contextType":"variable","element":"text","transform":"evaluate","parameter":[{"valueString":"item.answer.value"}]}]}]},{"name":"QrToBundle","typeMode":"none","input":[{"name":"qr","type":"QuestionnaireResponse","mode":"source"},{"name":"q","type":"Questionnaire","mode":"target"},{"name":"patient","type":"Patient","mode":"target"},{"name":"questionnaireresp","type":"QuestionnaireResponse","mode":"target"},{"name":"servicerequest","type":"ServiceRequest","mode":"target"},{"name":"composition","type":"Composition","mode":"target"},{"name":"bundle","type":"Bundle","mode":"target"}],"rule":[{"name":"id","source":[{"context":"qr"}],"target":[{"context":"bundle","contextType":"variable","element":"id","transform":"uuid"}]},{"name":"type","source":[{"context":"qr"}],"target":[{"context":"bundle","contextType":"variable","element":"type","transform":"copy","parameter":[{"valueString":"document"}]}]},{"name":"composition","source":[{"context":"qr"}],"dependent":[{"name":"OrfComposition","variable":["qr","q","composition","patient","questionnaireresp","servicerequest","bundle"]}]},{"name":"qrgroups","source":[{"context":"qr"}],"dependent":[{"name":"QrToGroups","variable":["qr","patient","bundle","composition","servicerequest"]}]}]},{"name":"OrfComposition","typeMode":"none","input":[{"name":"qr","type":"QuestionnaireResponse","mode":"source"},{"name":"q","type":"Questionnaire","mode":"target"},{"name":"tgt","type":"Composition","mode":"target"},{"name":"patient","type":"Patient","mode":"target"},{"name":"questionnaireresp","type":"QuestionnaireResponse","mode":"target"},{"name":"servicerequest","type":"ServiceRequest","mode":"target"},{"name":"bundle","type":"Bundle","mode":"target"}],"rule":[{"name":"status","source":[{"context":"qr"}],"target":[{"context":"tgt","contextType":"variable","element":"status","transform":"copy","parameter":[{"valueString":"final"}]}]},{"name":"subject","source":[{"context":"qr"}],"target":[{"context":"tgt","contextType":"variable","element":"subject","variable":"reference","transform":"create","parameter":[{"valueString":"Reference"}]},{"context":"reference","contextType":"variable","element":"reference","transform":"evaluate","parameter":[{"valueString":"'urn:uuid:' + %patient.id"}]}]},{"name":"sections","source":[{"context":"qr"}],"target":[{"context":"tgt","contextType":"variable","element":"section","variable":"tgtSection"},{"context":"tgtSection","contextType":"variable","element":"title","transform":"copy","parameter":[{"valueString":"Order-Referral"}]},{"context":"tgtSection","contextType":"variable","element":"code","variable":"code"},{"context":"code","contextType":"variable","element":"coding","variable":"coding"},{"context":"coding","contextType":"variable","element":"system","transform":"copy","parameter":[{"valueString":"http://loinc.org"}]},{"context":"coding","contextType":"variable","element":"code","transform":"copy","parameter":[{"valueString":"93037-0"}]},{"context":"coding","contextType":"variable","element":"display","transform":"copy","parameter":[{"valueString":"Portable medical order form"}]},{"context":"tgtSection","contextType":"variable","element":"entry","variable":"reference","transform":"create","parameter":[{"valueString":"Reference"}]},{"context":"reference","contextType":"variable","element":"reference","transform":"evaluate","parameter":[{"valueString":"'urn:uuid:' + %questionnaireresp.id"}]},{"context":"tgtSection","contextType":"variable","element":"entry","variable":"reference","transform":"create","parameter":[{"valueString":"Reference"}]},{"context":"reference","contextType":"variable","element":"reference","transform":"evaluate","parameter":[{"valueString":"'urn:uuid:' + %servicerequest.id"}]},{"context":"tgtSection","contextType":"variable","element":"entry","variable":"reference","transform":"create","parameter":[{"valueString":"Reference"}]},{"context":"reference","contextType":"variable","element":"reference","transform":"evaluate","parameter":[{"valueString":"'urn:uuid:' + %q.id"}]}]},{"name":"servicerequest","source":[{"context":"qr"}],"target":[{"context":"servicerequest","contextType":"variable","element":"status","transform":"copy","parameter":[{"valueString":"active"}]},{"context":"servicerequest","contextType":"variable","element":"intent","transform":"copy","parameter":[{"valueString":"order"}]},{"context":"servicerequest","contextType":"variable","element":"subject","variable":"reference","transform":"create","parameter":[{"valueString":"Reference"}]},{"context":"reference","contextType":"variable","element":"reference","transform":"evaluate","parameter":[{"valueString":"'urn:uuid:' + %patient.id"}]}]}]}]}